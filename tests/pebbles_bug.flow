import pebbles/pebble_controller;
import pebbles/pebble_parameters;
import material/material2tropic;

main () {
	mManager = makeMaterialManager([]);
	controller = makePebbleController(println);
	mrender(mManager, true, getPebblesControlledView(controller));

	registerDispatcher(controller, "home", \-> showView(controller, mManager));

	validateCurrentPebbleAndInitView(controller, mManager, makeSimplePebble("home"));
}

showView(controller : PebbleController, mManager : MaterialManager) -> Material {
	value1B = make("");

	value2B = make("");

	confirmation = \number -> {
		\callbackToApprove -> {
			closeB = make(false);
			onClose = \x -> {
				next(closeB, true);
				callbackToApprove(x);
			}
			ShowMDialog(
				mManager,
				closeB,
				[
			        MDialogUseFrame(),
			        MDialogActions([
			            MTextButton(_("CANCEL"), \ -> {
			            	onClose(false);
			            }, [], []),
			            MTextButton(_("OK"), \ -> {
			            	onClose(true);
			            }, [], []),
			        ])
				],
				MText("Confirm " + number + " ?", [])
			)
		}
	}

	MLinkPebbleParameters(
		controller,
		[
			PebbleStringLink(
				"param1",
				value1B,
				\value1 -> println("value1 = " + value1),
				RecordURLChange()
			),
			PebbleStringLink(
				"param2",
				value2B,
				\value2 -> println("value2 = " + value2),
				RecordURLChange()
			),
		],
		MLines([
			MTextButton("Click me to change parameter", \-> {
				next(value1B, getValue(value1B) + "0")
			}, [], []),
			MSelect(value1B, \value1 -> {
				MText("Value is " + value1, [])
			}),
			MTextButton("Click me to change parameter 2", \-> {
				next(value2B, getValue(value2B) + "0")
			}, [], []),
			MSelect(value2B, \value2 -> {
				MText("Value is " + value2, [])
			})
		])
	)
	|> (\m -> MSelect(value1B, \value1 ->
		if (value1 == "") m
		else MConfirmPebbleParameterSwitch(
			controller,
			[KeyValue("param1", value1)],
			confirmation("1"),
			m
		)
	))
	|> (\m -> MSelect(value2B, \value2 ->
		if (value2 == "") m
		else MConfirmPebbleParameterSwitch(
			controller,
			[KeyValue("param2", value2)],
			confirmation("2"),
			m
		)
	))

}