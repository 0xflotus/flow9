// Tests all the basic types
import maybe;

α0 = int;

α1 c= α0;

α2 c= bool;
bool c= α3;

α4 c= int;
α5 c= double;
α6 c= string;

α7 c= native;
native c= α8;

α9 c= flow;
flow c= α10;

α11 c= void;
void c= α12;

α13 c= ?;
? c= α14;
α15 c= ??;
?? c= α16;

α17 c= () -> void;
() -> void c= α18;

α19 c= [int];
[int] c= α20;

α21 c= ref int;
ref int c= α22;

α23 c= None<?>;
None<?> c= α24;

α25 c= union Maybe<?>;
union Maybe<?> c= α26;

α27 c= (bool, int, flow, ref string, [native], (?) -> ??) -> double;
(bool, int, flow, ref string, [native], (?) -> ??) -> double c= α28;

α29 c= (None<?>, (Some<??>) -> None<?>) -> Some<??>;
(None<?>, (Some<??>) -> None<?>) -> Some<??> c= α30;

α31 c= (union Maybe<?>) -> void;
(union Maybe<?>) -> void c= α32;

α33 c= () -> union Maybe<?>;
() -> union Maybe<?> c= α34;

α35 c= (None<?>) -> void;
(None<?>) -> void c= α36;

α37 c= () -> None<?>;
() -> None<?> c= α38;

α39 c= ref None<?>;
ref None<?> c= α40;

α41 c= ref union Maybe<?>;
ref union Maybe<?> c= α42;
