import tools/flowc/backends/common;

export {
	fiCppRenameKeyword(cfg : FcCppConfig, kwd : string, isField : bool) -> string;
	fiCppIndent = "\t";

	CppKeywordSet = fold(
		[
			"abs", "alignas", "alignof", "and", "and_eq", "asm", "assert", "atomic_cancel", "atomic_commit", "atomic_noexcept",
			"auto", "bitand", "bitor", "bool", "break", "case", "catch", "ceil", "char", "char16_t", "char32_t",
			"class", "compl", "concept", "const", "constexpr", "const_cast", "continue", "decltype", "default",
			"delete", "do", "double", "dynamic_cast", "else", "enum", "explicit", "export", "extern", "false",
			"float", "floor", "flow", "for", "friend", "goto", "if", "import", "inline", "int", "long", "main", "module", "mutable",
			"namespace", "new", "noexcept", "not", "not_eq", "nullptr", "operator", "or", "or_eq", "private",
			"protected", "public", "random", "register", "reinterpret_cast", "requires", "return", "round", "short", "signed",
			"sizeof", "static", "static_assert", "static_cast", "stdout", "stderr", "struct", "switch", "synchronized", "template",
			"this", "thread_local", "throw", "true", "trunc", "try", "typedef", "typeid", "typename", "union", "unsigned",
			"using", "virtual", "void", "volatile", "wchar_t", "while", "xor", "xor_eq"
		],

		makeSet(),
		insertSet
	);
	
}

fiCppRenameKeyword(cfg, kwd, isField) {
	/*(if (isField) "f" else "") +*/ (if (containsSet(CppKeywordSet, kwd)) "flow_" else "") + kwd;
}
