import tools/flowc/backends/common;
import tools/flowc/fcmodule;
import tools/flowc/backends/html/fi2html_defines;

export {
	fiValidateHTMLManifest(cfg: FiHTMLConfig) -> [FcError];
	fiSaveHTMLManifest(cfg: FiHTMLConfig) -> void;
}

fiValidateHTMLManifest(cfg) {
	fieldCheck = \field, name -> if (field == "") "HAM: '" + name + "' not set" else "";
	checkIcon = \ix, icon -> if (icon.first == "") "HAM: icon[" + i2s(ix) + "] URL must be set" else "";	
	if (cfg.manifestFileName == "") {
		fcVerbose(cfg, 0, "HAM: Manifest file not set. Skip sanity checks.");
		[]
	} else {
		fcVerbose(cfg, 0, "HAM: Manifest file set to \"1\" or file name. Checking manifest file...");
		switch (cfg.manifest) {
			Some(manifest) : {
				r = [
					fieldCheck(manifest.name, "ham-name"),
					fieldCheck(manifest.shortName, "ham-short-name"),
					fieldCheck(manifest.startUrl, "ham-start-url"),
					fieldCheck(manifest.description, "ham-description"),
				];

				ri = filter(mapi(manifest.icons, checkIcon), \e -> e != "");
				r1 = map(filter(concat(r, ri), \e -> e != ""), \e -> FcError(e, []));

				ln = length(r1);
				if (ln == 0) {
					fcVerbose(cfg, 0, "HAM: Manifest file parameters are correct.");
				} else {
					fcVerbose(cfg, 0, "HAM: There are " + i2s(length(r1)) + " error(s)");
				}
				r1
			}
			None() : [FcError("HAM: Manifest was not initialised.", [])];
		}
	}	
}

fiSaveHTMLManifest(cfg) {
	nv = \n, v -> if (v != "") "\"" + n +"\":\"" + v + "\"" else "";

	fcVerbose(cfg, 0, "HAM: saving manifest file '" + cfg.manifestFileName + "'");

	switch (cfg.manifest) {
		Some(manifest): {
			icons = if (manifest.icons == []) "" else {
				"[" +
				strGlue(map(manifest.icons, \icon -> {
					"{" +
					"\"src\":\"" + icon.first + "\"" +
					(if (icon.second == "") "" else ",\"sizes\":\"" + icon.second + "\"") +
					(if (icon.third == "") "" else ",\"type\":\"" + icon.third + "\"")
					+ "}"
				}), ",")
				+ "]"
			}
			manifestData = "{" +
			strGlue(filter([
				nv("name", manifest.name),
				nv("short_name", manifest.shortName),
				nv("description", manifest.description),
				nv("start_url", manifest.startUrl),
				nv("background_color", manifest.backgroundColor),
				nv("display", manifest.display),
				nv("lang", manifest.lang),
				nv("dir", manifest.dir),
				"\"icons\":" + icons
			], \e -> e != ""), ",") + "}";
			setFileContent(cfg.manifestFileName, manifestData);
			{}
		}
		None(): {}
	}
}
