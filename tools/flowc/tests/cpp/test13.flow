// testing move semantics for large arrays

i2s(i) { cast(i : int -> string); }
d2s(i) { cast(i : double -> string); }

native println : io (string) -> void = Native.println;
native fold : (xs : [?], init : ??, fn : (??, ?)->??) -> ?? = Native.fold;
native enumFromTo : (int, int) -> [int] = Native.enumFromTo;
native map : ([?], (?) -> ??) -> [??] = Native.map;
native timestamp : io () -> double = Native.timestamp;

seed = "ABCDEFGHIJKLMNOPRSTUVWXYZ";

counter = ref 0;

SimpleStruct(x: string, c: int);
AggregateStruct(xx: [SimpleStruct]);

generateStrings(len: int) {
	AggregateStruct(map(enumFromTo(0, len), \x -> { counter := ^counter  + 1; SimpleStruct(seed + i2s(^counter), ^counter); }));
}

amendStrings(in: AggregateStruct) {
	in;
}

main() {
	x = timestamp();
	strings = generateStrings(100000);
	strings2 = fold(enumFromTo(0, 1000), strings, \acc, v -> acc);
	println(d2s(timestamp() - x));
}
