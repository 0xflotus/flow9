native println : io (string) -> void = Native.println;
assert(cond : bool, msg : string) {
	if (!cond) println("ERROR! " + msg);
}

Union1 ::= Struct1;
	Struct1(x : int);
	
test1() {
	u : Union1 = Struct1(123);
	assert(u.x == 123, "u.x == 123");
}

native max : (?, ?) -> ? = Native.fast_max;
max(a,b) { if (a > b) a else b; }

test2() {
	a = 1; b = 2;
	assert(max(a, b) == b, "test2");
}

native map : ([?], (?) -> ??) -> [??] = Native.map;

test3() {
	a = [1, 2, 3];
	b = map(a, \x -> cast(x : int -> string));
	assert(b == ["1", "2", "3"], "test3");
}

main() {
	test1();
	test2();
	test3();
}