import runtime;	// for println
import string; // for is2()

export {
	is_(checked : ?, compared : ?, message : string) -> void;
	check1(ok : bool) -> void;
	check2(ok : bool, msg : string) -> void;
	check3(ok : bool, msg : string) -> void;
	printTestsSummary() -> void;
	print_time(t1 : double, t2 : double) -> void;
	print_time2(tag : string, t : double) -> void;
	print_int_array(arr : [int]) -> void;
}

is_(checked, compared, message) {
	if (checked == compared) {
		println("PASS: " + message);
	} else {
		println("FAILED: " + message + " !!!!!!!!!!!!!!!!!!!"); // !!!!!!!!! is_ needed to see failed tests quickly
	}
}

print_time2(tag : string, t : double) {
	d2i2 = \d -> cast(d : double -> int); 
	println(tag + " = " + i2s(d2i2(t)) + " ms");
}

print_time(t1 : double, t2 : double) {
	print_time2("t", t2 - t1);
}

print_int_array(arr : [int]) {
	println("[" + strGlue(map(arr, i2s), ",") + "]");
}

check1(ok : bool) {
	println(if (ok) "OK!" else "FAILURE!!!");
}

check2(ok : bool, msg : string) {
	result = if (ok) "PASSED: " else "FAILED: ";
	println(result + msg + (if (ok) "" else " !!!!!!!!!!!!!!!!!!!")); // !!!!!!!!! is_ needed to see failed tests quickly
}

testsPassed = ref 0;
testsFailed = ref 0;

check3(ok : bool, msg : string) {
	if (!ok) {
		println("FAILED: " + msg + " !!!!!!!!!!!!!!!!!!!");
		testsFailed := 1 + ^testsFailed;
	} else testsPassed := 1 + ^testsPassed;
}

printTestsSummary() {
	println("Tests passed: " + i2s(^testsPassed) 
		+ (if (0 < ^testsFailed) ", tests FAILED: " + i2s(^testsFailed) else ""));
}
