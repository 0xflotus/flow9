import tools/common/compilerconfig;

main() {
	switch (getCompilerConfig()) {
		Some(config): {
			println(isConfigParameterFalse(config, "parallel"));
		}
		default: println("ERROR getting config!");
	}
}
/*
import tools/flowc/typechecker/ftype;

cmp(k1 : ?, k2 : ?) -> void {
	println(k1 < k2);
	println(k2 < k1);
	println(k1 == k2);
}

main() {
	k1 = Triple(FRef(FTypeVar(90004), FTypeVar(90004)), FUnifyLeft(), FRef(FUnion("Maybe", [FTypeVar(90000)]), FUnion("Maybe", [FTypeVar(90000)])));
	k2 = Triple(FRef(FUnion("Maybe", [FTypeVar(90000)]), FUnion("Maybe", [FTypeVar(90000)])), FUnifyLeft(), FRef(FTypeVar(90001), FTypeVar(90001)));
	cmp(k1.first.read, k2.first.read);
	
	// k1 = FTypeVar(90004);
	// k2 = FUnion("Maybe", [FTypeVar(90000)]);
	// cmp(k1, k2);
}
*/