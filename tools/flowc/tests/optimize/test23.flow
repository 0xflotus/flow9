import runtime;
import string;

// Optimization of inlined recursive calls
// Here a recursive finction 'fun' is inlined only once,
// because an 'inlining_rec_depth' command line parameter
// in this test is set to '1'.
// When 'fun(1)' is called, the only one recursive
// call is unrolled, so the optimization evaluation 
// stops with '1 + fun(0)' value.

fun(x : int) -> int {
	if (x == 0) 0 else x + fun(x - 1)
}

main() {
	println(fun(1));
}
