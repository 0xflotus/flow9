import runtime;
import string;

// Optimization of inlined calls:
// here the name 'y' of a local variable, used in switch in inlined function 
// coinsides with a variables 'y', 'y0' and 'y1' in the scope of inlining.
// The var 'y' should be renamed to 'y2' to be differen with all
// variables 'y', 'y0' and 'y1' in an outer scope.

Pairs ::= Pair1, Pair2;
Pair1 : (a : int, b : int);
Pair2 : (a : int, b : int);

fun(p : Pairs) -> int {
	switch(p) {
		Pair1(x, y): x + y;
		Pair2(x, y): x - y;
	}
}

main() {
	y = 2;
	y0 = 3;
	y1 = 4;
	println(fun(Pair1(1, 1)));
	x = 1;
	x1 = 2;
	println(fun(Pair2(1, 1)));
}

----------

fun = \p:Pairs ->
	switch (p : Pairs) {
		Pair1(x,y): {
			x : int = p.a;
			y : int = p.b;
			(x + y)
		}
		Pair2(x,y): {
			x : int = p.a;
			y : int = p.b;
			(x - y)
		}
	}


main = \ ->
	{
		println(p0 : int = Pair1(1, 1);
		switch (p0 : Pairs) {
			Pair1(__,__): {
				2
			}
			Pair2(__,__): {
				0
			}
		});
		println(p0 : int = Pair2(1, 1);
		switch (p0 : Pairs) {
			Pair1(__,__): {
				2
			}
			Pair2(__,__): {
				0
			}
		})
	}


