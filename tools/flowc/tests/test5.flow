native length : ([?]) -> int = Native.length;

native concat : ([?], [?]) -> [?] = Native.concat;
//native concat : ([flow], [flow]) -> [flow] = Native.concat;

// Concatenate three arrays
concat3 : ([?], [?], [?]) -> [?];

concat3(a1,a2,a3) {
	if (length(a1) < length(a3)) {
		concat(concat(a1, a2), a3);
	} else {
		concat(a1, concat(a2, a3));
	}
}

concatA(a) {
	concatA_rec(a, 0, length(a))
}

concatA_rec(a, i, l) {
	if (l <= 3) {
		if (l == 1) {
			a[i]
		} else if (l == 2) {
			concat(a[i], a[i+1])
		} else if (l == 3) {
			concat3(a[i], a[i+1], a[i+2])
		} else {
			[]
		}
	} else {
		m = l / 2;
		concat(
			concatA_rec(a, i, m),
			concatA_rec(a, i+m, l-m)
		)
	}
}
