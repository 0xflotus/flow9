import form/form;
import transforms;

// Be careful, lots of memory leaks here
FloatingCols(forms: [Form], widthBs: [DynamicBehaviour<double>]) -> Form {
	linesB = selectDistinct(make([]), \lns -> {
		maxLine = either(maxA(lns), 0);
		res : [ref [Pair<int, Form>]] = map(enumFromTo(0, maxLine), \i -> ref []);
		mapi(lns, \i, ln -> refArrayPush(res[ln], Pair(i, forms[i])))
		|> ignore;
		
		map(res, \r -> ^r)
	});

	Select(linesB, \lines -> 
		Lines(map(lines, \cols -> 
			Cols(map(cols, \col -> 
				Inspect([Width(widthBs[col.first])], col.second)
			))
		))
	)
}

Lines(f : [Form]) -> Form {
	f[0];
}

Cols(f : [Form]) -> Form {
	f[0];
}

Select(b : Behaviour<?>, fn : (?) -> Form) -> Form {
	Empty()
}
