	Maybe<?> ::= None, Some<?>;
	None();
	Some(value : ?);

find(a : [?], fn : (?) -> bool) -> Maybe<?> {
	None();
}

	either : (m: Maybe<?>, alternative: ?) -> ?;
either(m, alternative) {
	switch (m : Maybe) {
		None(): alternative;
		Some(v): v;
	}
}



	DbField ::= DbIntField, DbDoubleField, DbStringField, DbNullField;
		DbIntField(name : string, value : int);
		DbDoubleField(name : string, value : double);
		DbStringField(name : string, value : string);
		// It turns out that the haXe database wrapper can not return null values. These fields are simply absent.
		// If you use getFieldValueDb below, it will work.
		DbNullField(name : string); 

	getFieldValueDb(result : [DbField], field : string) -> DbField;


getFieldValueDb(result, field) {
	r = find(result, \r -> r.name == field);
	either(r, DbNullField(field));
}
