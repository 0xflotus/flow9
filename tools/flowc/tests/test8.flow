native fold : (xs : [?], init : ??, fn : (??, ?)->??) -> ?? = Native.fold;
Pair(first : ?, second : ??);

	native replace : ([?], int, ?) -> [?] = Native.replace;

arrayPush : ([?], ?) -> [?];
arrayPush(array, value) { replace(array, length(array), value); }
native length : ([?]) -> int = Native.length;

unzip(xs : [?], fn : (?) -> bool) -> Pair<[?], [?]> {
	fold(xs, Pair([], []), \acc : Pair<[?], [?]>, x -> {
		if (fn(x)) {
			Pair(
				arrayPush(acc.first, x),
				acc.second
			)
		} else {
			Pair(
				acc.first,
				arrayPush(acc.second, x)
			)
		}
	})
}

