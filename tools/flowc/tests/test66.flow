// A double-linked list
DList(mutable first : DNode<?>, mutable last : DNode<?>);
	DNode<?> ::= DEnd, DLink<?>;
DEnd : ();

DLink(v : ?, mutable before : DNode<?>, mutable after : DNode<?>, mutable attached : bool);


popFirstDList(list : DList<?>, def : ?) -> ? {
	f = list.first;
	switch (f : DNode) {
		DEnd(): def;
		DLink(e, b, a, l): {
			// cast(f : DNode -> DLink);
			e;
		}
	}
}
