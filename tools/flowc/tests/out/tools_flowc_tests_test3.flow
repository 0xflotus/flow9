////////////////////
Z ::= Y, X;
	X : (x : double);
	Y : ();

native fold : (xs : [?], init : ??, fn : (??, ?)->??) -> ?? = Native.fold;

uniqq(a : [?]) -> [?] {
	a
}

fn10() {
//	debugtyping;
	z : Z = X(11.0);

	transitiveImports = fold([], [], \acc, imp -> {
		hfdsgfdhdfhkljfklsdhjkljdklsgj = 
			switch(z) {
				X(x): x;
			    Y(): 3.0;
			};

		acc
	}) |> uniqq;
}

----------

uniqq = (\a:[?] ->
	(a : [?])
 : (a : [?]) -> [?]);

fn10 = (\ ->
	(z : Z = (X((11.0 : double)) : X);
	({
		(transitiveImports : [??] = ((uniqq : (a : [??]) -> [??])(((fold : (xs : [?], init : [??], fn : ([??], ?) -> [??]) -> [??])(([] : [?]), ([] : [??]), (\acc:[??], imp:? ->
			(hfdsgfdhdfhkljfklsdhjkljdklsgj : double = (switch (z : Z) {
				X(x): {
					(x : double = ((z : X).x : double);
					(x : double) : double)
				}
				Y(): {
					(3.0 : double)
				}
			} : double);
			({
				(acc : [??])
			}
			 : [??]) : [??])
		 : (acc : [??], imp : ?) -> [??])) : [??])) : [??]);
		({

		}
		 : void) : void)
	}
	 : void) : void)
 : () -> void);
