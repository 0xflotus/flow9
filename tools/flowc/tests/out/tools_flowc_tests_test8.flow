native fold : (xs : [?], init : ??, fn : (??, ?)->??) -> ?? = Native.fold;
Pair(first : ?, second : ??);

	native replace : ([?], int, ?) -> [?] = Native.replace;

arrayPush : ([?], ?) -> [?];
arrayPush(array, value) { replace(array, length(array), value); }
native length : ([?]) -> int = Native.length;

unzip(xs : [?], fn : (?) -> bool) -> Pair<[?], [?]> {
	fold(xs, Pair([], []), \acc : Pair<[?], [?]>, x -> {
		if (fn(x)) {
			Pair(
				arrayPush(acc.first, x),
				acc.second
			)
		} else {
			Pair(
				acc.first,
				arrayPush(acc.second, x)
			)
		}
	})
}


----------

arrayPush = (\array:[?], value:? ->
	((replace : ([?], int, ?) -> [?])((array : [?]), ((length : ([?]) -> int)((array : [?])) : int), (value : ?)) : [?])
 : (array : [?], value : ?) -> [?]);

unzip = (\xs:[?], fn:(?) -> bool ->
	((fold : (xs : [?], init : Pair<[?], [?]>, fn : (Pair<[?], [?]>, ?) -> Pair<[?], [?]>) -> Pair<[?], [?]>)((xs : [?]), (Pair(([] : [?]), ([] : [?])) : Pair<[?], [?]>), (\acc:Pair<[?], [?]>, x:? ->
		(if (((fn : (?) -> bool)((x : ?)) : bool)) {
			(Pair(((arrayPush : (array : [?], value : ?) -> [?])(((acc : Pair<[?], [?]>).first : [?]), (x : ?)) : [?]), ((acc : Pair<[?], [?]>).second : [?])) : Pair<[?], [?]>)
		} else {
			(Pair(((acc : Pair<[?], [?]>).first : [?]), ((arrayPush : (array : [?], value : ?) -> [?])(((acc : Pair<[?], [?]>).second : [?]), (x : ?)) : [?])) : Pair<[?], [?]>)
		}
		 : Pair<[?], [?]>)
	 : (acc : Pair<[?], [?]>, x : ?) -> Pair<[?], [?]>)) : Pair<[?], [?]>)
 : (xs : [?], fn : (?) -> bool) -> Pair<[?], [?]>);
