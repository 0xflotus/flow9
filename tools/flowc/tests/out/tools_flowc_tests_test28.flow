	Maybe<?> ::= None, Some<?>;
	None();
	Some(value : ?);

    Fail<?> ::= Some<?>, Failed;
        Failed(msg : string);

failBind : (fv : Fail<?>, f : (v : ?)->Fail<??>)->Fail<??>;

failBind(fv, f) switch (fv) {
    Some(v): f(v);
    Failed(msg): fv;
}

----------

failBind = (\fv:Fail<?>, f:(v : ?) -> Fail<??> ->
	(switch (fv : Fail<?>) {
		Some(v): {
			(v : ? = ((fv : Some<?>).value : ?);
			((f : (v : ?) -> Fail<??>)((v : ?)) : Fail<??>) : Fail<??>)
		}
		Failed(msg): {
			(msg : string = ((fv : Failed<?>).msg : string);
			(fv : Failed<?>) : Failed<?>)
		}
	} : Fail<??>)
 : (fv : Fail<?>, f : (v : ?) -> Fail<??>) -> Fail<??>);
