Behaviour<?> ::= ConstBehaviour<?>, DynamicBehaviour<?>;

DynamicBehaviour(value : ?);
ConstBehaviour();

XmlEvent ::= XmlElementEnd, XmlTextEvent;

XmlTagEvent ::= XmlElementEnd;
	XmlElementEnd(tag : string);
	XmlTextEvent();

next(b : DynamicBehaviour<?>, value : ?) -> void {}

parseTag() -> XmlElementEnd {
	XmlElementEnd("");
}

parseXml(events : DynamicBehaviour<XmlEvent>) {
	event = parseTag();
	event.tag;
	next(events, event);
}

----------

next = (\b:DynamicBehaviour<?>, value:? ->
	({} : void)
 : (b : DynamicBehaviour<?>, value : ?) -> void);

parseTag = (\ ->
	(XmlElementEnd(("" : string)) : XmlElementEnd)
 : () -> XmlElementEnd);

parseXml = (\events:DynamicBehaviour<XmlEvent> ->
	(event : XmlElementEnd = ((parseTag : () -> XmlElementEnd)() : XmlElementEnd);
	({
		((event : XmlElementEnd).tag : string);
		((next : (b : DynamicBehaviour<XmlEvent>, value : XmlEvent) -> void)((events : DynamicBehaviour<XmlEvent>), (event : XmlElementEnd)) : void)
	}
	 : void) : void)
 : (events : DynamicBehaviour<XmlEvent>) -> void);
