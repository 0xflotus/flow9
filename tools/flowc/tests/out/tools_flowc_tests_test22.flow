FcExp ::= Plus, Minus;
Plus();
Minus();

Maybe<?> ::= None, Some<?>;
None();
Some(a : ?);

FcNativeDec(
	flowfallback: Maybe<FcExp>,
);

// a2 against a0 goes wrong

// foo=debugtyping1;

fcNativeHasFallback(nat : FcNativeDec) -> bool {
	switch (nat.flowfallback) {
		None() : false;
		Some(__) : true;
	}
}


----------

fcNativeHasFallback = (\nat:FcNativeDec ->
	(gsymswitch0 : Maybe<FcExp> = ((nat : FcNativeDec).flowfallback : Maybe<FcExp>);
	({
		(switch (gsymswitch0 : Maybe<FcExp>) {
			None(): {
				(false : bool)
			}
			Some(__): {
				(__ : FcExp = ((gsymswitch0 : Some<FcExp>).a : FcExp);
				(true : bool) : bool)
			}
		} : bool)
	}
	 : bool) : bool)
 : (nat : FcNativeDec) -> bool);
