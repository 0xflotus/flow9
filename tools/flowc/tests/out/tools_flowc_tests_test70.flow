Maybe ::= None, Some;

None();
Some(i : int);

fooz() {
//	debugtyping1;

	foo = \a -> {}

	x = None();
	foo(x);
	y = Some(1);
	foo(y);
	y.i;
}

----------

fooz = (\ ->
	(foo : (Maybe) -> void = (\a:Maybe ->
		({} : void)
	 : (a : Maybe) -> void);
	({
		(x : None = (None() : None);
		({
			((foo : (Maybe) -> void)((x : None)) : void);
			(y : Some = (Some((1 : int)) : Some);
			({
				((foo : (Maybe) -> void)((y : Some)) : void);
				((y : Some).i : int)
			}
			 : int) : int)
		}
		 : int) : int)
	}
	 : int) : int)
 : () -> int);
