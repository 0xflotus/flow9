Maybe<?> ::= None, Some<?>;
None();
Some(value : ?);

onlyOnce(pad : ref Maybe<?>, init : () -> ?) -> ? {
	init();
}

// a = debugtyping;

foo() {
	mA = ref None();
	onlyOnce(mA, \ -> 1);
}

----------

onlyOnce = (\pad:ref Maybe<?>, init:() -> ? ->
	((init : () -> ?)() : ?)
 : (pad : ref Maybe<?>, init : () -> ?) -> ?);

foo = (\ ->
	(mA : ref Maybe<int> = (ref (None() : None<int>) : ref None<int>);
	({
		((onlyOnce : (pad : ref Maybe<int>, init : () -> int) -> int)((mA : ref Maybe<int>), (\ ->
			(1 : int)
		 : () -> int)) : int)
	}
	 : int) : int)
 : () -> int);
