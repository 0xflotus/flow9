import runtime;
import behaviour;
import transforms;

Option ::= A, B, C;
	A(); B(); C();
	
main() {
	options : [Option] = [A()];
	
	// \array : DynamicBehaviour<[?]>
	ifDynArrayToggle = \array : DynamicBehaviour<?>, v : bool, s : ? -> if (v) {
		if (!containsStruct(getValue(array), s)) dynArrayPush(array, s);
	} else {
		next(array, removeAllStructs(getValue(array), s));
	}
	
	boolOptionsB = make([]);
	
	f = \struct -> Pair(containsStruct(options, struct), \v -> ifDynArrayToggle(boolOptionsB, v, struct));
	f(A());
	f(B());
	nop();
}