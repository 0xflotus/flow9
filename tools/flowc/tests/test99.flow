import paragraphtypes;

Paragraph2(elements : [ParagraphElement], style : [ParagraphStyle], availableWidth : Behaviour<double>) -> DynamicBehaviour<[Form]> {
	// First, inline all TextFragments
	elementList = fold(elements, makeList(), \acc, element -> {
		switch(element : ParagraphElement) {
		TextFragments(parts): concatList(parts, acc);
		GlueFragments() : Cons(GlueFragments(), acc);
		default: Cons(cast(element : ParagraphElement -> Form), acc);
		}
	});
	expanded = list2array(elementList);

	// Next, extract the style
	alignment = ref LeftAlign();
	interlineSpacing = ref 0.0;
	fill = ref 0xffffff;
	fillset = ref 0.0;

	iter(style, \s -> {
		switch (s : ParagraphStyle) {
		InterlineSpacing(d): interlineSpacing := d;
		Fill(color) : fill := color;
		FillOpacity(opacity) : fillset := opacity;
		default: alignment := cast(s : ParagraphStyle -> ParagraphAlignment);
		}
	});

	Wrap(availableWidth, expanded, ^alignment, ^interlineSpacing, ^fill, ^fillset);
}


Wrap(availableWidth : Behaviour<double>, elements : [WrapElement],
	  alignment : ParagraphAlignment, interlineSpacing : double,
	  background : int, opacity : double)
	-> DynamicBehaviour<[Form]> {
	make([])
}
