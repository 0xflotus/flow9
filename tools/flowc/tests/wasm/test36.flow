// testing globals and global refs

import expect;
import runtime;

g1i1 = 123;
// g1i2 = 100 + 23;		// not compiled
// g1s1 = "test";		// not compiled
g1d1 = 123.0;
g1b = true;

test1() {
	expect2(101, g1i1 == 123);
	// expect2(102, g1i2 == 123);
	// expect2(103, g1s1 == "test");
	expect2(104, g1d1 == 123.0);
	expect2(105, g1b);
}

g2i0 = ref 0;
g2i1 = ref 123;
g2i2 = ref 100 + 23;
g2b0 = ref false;
g2b1 = ref true;
g2s1 = ref "test";
g2s2 = ref f2s("test");
g2d1 = ref 123.0;
g2d2 = ref 100.0 + 23.0;

f2s(s : string) -> string {
	s + s
}

test2() {
	expect2(201, ^g2i0 == 0);
	expect2(202, ^g2i1 == 123);
	g2i1 := 234;
	expect2(2021, ^g2i1 == 234);
	expect2(203, ^g2i2 == 123);
	expect2(204, !^g2b0);
	g2b0 := true;
	expect2(2041, ^g2b0);
	expect2(205, ^g2b1);
	expect2(206, ^g2s1 == "test");
	g2s1 := "test2";
	expect2(2061, ^g2s1 == "test2");
	expect2(207, ^g2d1 == 123.0);
	g2d1 := 234.0;
	expect2(2071, ^g2d1 == 234.0);
	expect2(208, ^g2d2 == 123.0);
	expect2(209, ^g2s2 == "testtest");
}

g3a = ref [1,2,3];
g3f : ref flow = ref 123;
g3fn = ref \x : int -> x + 1;

test3() {
	expect2(301, ^g3a == [1,2,3]);
	g3a := [3,2,1];
	expect2(302, ^g3a == [3,2,1]);
	expect2(303, ^g3f == 123);
	g3f := "123";
	expect2(304, ^g3f == "123");
	expect2(305, (^g3fn)(100) == 101);
	g3fn := \x : int -> x + 2;
	expect2(306, (^g3fn)(100) == 102);
}

S4(x : int);

g4s = S4(123);

test4() {
	expect2(401, g4s.x == 123);
}

a5 = generate(1, 6, \x -> x);

test5() {
	prints(toString(a5));
	expect2(501, [1,2,3,4,5] == a5);
}

main() {
	test1();
	test2();
	test3();
	test4();
	test5();
	expectFinish();
}
