// md5

import expect;

native length : ([?]) -> int = Native.length;

iter2(a : [?], f : (?) -> void) -> void {
	do_iter2(a, f, 0);
}

do_iter2(a: [?], f : (?) -> void, idx : int) -> void {
	printi(length(a));
	if (idx < length(a)) {
		f(a[idx]);
		do_iter2(a, f, idx+1);
	}
}

test1() {
	s = ref 0;
	fff = \x : int -> {
		printi(x);	// can't be compiled by some reason
		s := ^s + x;
	}
	a = [111, 222, 333, 444];
	printi(^s);
	iter2(a, fff);
	printi(^s);
	iter2(a, fff);
	printi(^s);
	iter2(a, fff);				// crash here!
	printi(^s);
}

main() {
	test1();
}
