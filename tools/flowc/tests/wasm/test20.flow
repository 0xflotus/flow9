// makeStructValue
import expect; 

native isSameStructType : (value1 : flow, value2 : flow) -> bool = Native.isSameStructType;
native makeStructValue : (structname : string, args : [flow], default_value : flow) -> flow = Native.makeStructValue;

native strlen : (string) -> int = Native.strlen;

b2i(b : bool) -> int {
	if (b) 1 else 0
}

S0(); S1();

test1() {
	if (true) prints("test1");
	expect2(101, isSameStructType(S1(), S1()));
	expect2(102, !isSameStructType(S0(), S1()));
}

test2() {
	if (true) prints("test2");
	f1 = makeStructValue("S0", [], S1());
	expect2(201, isSameStructType(f1, S0()));
	
	f2 = makeStructValue("xxx", [], S1());
	expect2(202, isSameStructType(f2, S1()));
}

i2flow(i : int) -> flow {
	cast(i : int -> flow)
}

S3i(x : int, y : int);

test3() {
	if (true) prints("test3");

	def = S3i(0, 0);
	arr = [i2flow(111), i2flow(222)];
	f1 = makeStructValue("S3i", arr, def);
	
	
	s1 : S3i = cast(f1: flow -> S3i);
	
	expect2(301, s1.x == 111);
	// prints("!!!!!!!!!!!!!!!1");
	expect2(302, s1.y == 222);
	
	sss = S3i(111, 222);
	expect2(303, sss.x == 111);
	expect2(304, sss.y == 222);
	expect2(305, isSameStructType(sss, s1));
	expect2(365, isSameStructType(def, s1));
	expect2(307, sss == s1);
}

test4() {
	prints("test4");
	s = S3i(111, 222);
	f : flow = s;
	expect2(401, isSameStructType(f, f));
	ff : flow = cast(s : S3i -> flow);
	expect2(402, isSameStructType(ff, ff));
	expect2(403, isSameStructType(s, f));
	s2 : S3i = cast(f : flow -> S3i);
	expect2(404, isSameStructType(s, s2));
}

test5() {
	prints("test5");
	f1 : flow = 111;
	f2 : flow = 222.0;
	farr : [flow] = [f1, f2];
	expect2(501, cast(farr[0] : flow -> int) == 111);
	expect2(502, cast(farr[1] : flow -> double) == 222.0);
}

main() {
	test1();
	test2();
	test3();
	test4();
	test5();
}
