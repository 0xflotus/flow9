native isSameObj : (value1 : flow, value2 : flow) -> bool = Native.isSameObj;
native number2double2 : (value : flow) -> double = Native.number2double2;

native printi : (int) -> void = host.printi;
native prints : (string) -> void = host.prints;

expect(i : int, got : bool) {
	if (got == false) {
		printi(i);
	}
}
foo();

test0() {
	prints("test isSameObj");
	a = 1;
	b = a;
	expect(101, isSameObj(a,b))
}
test1() {
	prints("test isSameObj");
	a = cast("hi" : string -> flow);
	b = a;
	expect(102, isSameObj(a,b)) 
}
test2() {
	prints("test isSameObj");
	a = foo();
	b = a;
	expect(103, isSameObj(a,b))
}
test3() {
	a = cast(2 : int -> flow);
	b = a;
	expect(104, isSameObj(a,b))
}
test4() { 
	prints("test isSameObj");
	a = "hello";
	b = "world";
	expect(105, false == isSameObj(a,b))
}


test5() {
	prints("test number2double2");
	expect(201, number2double2(cast(2 : int -> flow)) == 2.0)
}
test6() {
	prints("test number2double2");
	expect(202, number2double2(cast(3.14 : double -> flow)) == 3.14)
}
test7() {
	prints("test number2double2");
	expect(203, (number2double2(cast(1.5 : double -> flow)) == 1.0) == false)
}


main() {
	test0();
	test1();
	test2();
	test3();
	test4();
	test5();
	test6();
	test7()
}