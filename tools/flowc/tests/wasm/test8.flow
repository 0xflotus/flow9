import expect;

one () -> int { 
    1;
}

add_results (x : () -> int) -> int {
    x() + x();
}

build(i : int) {
    \a -> a + i;
}

build_nested(j : int) {
    b = \x -> 
        \y -> y + x + j;

    b(j*j); 
}

main() {
    {
        x = 1;
        z = \ -> x + 5;
        zz = z;
        y = add_results(z);
        expect(0, y == 12, true);
        yy = add_results(one);
        expect(1, yy == 2, true);
        expect(3, zz==z, true);

        a1 = build(1);
        a2 = build(1);
        a3 = build(2);
        expect(4, a1==a2, true);
        expect(5, a1==a3, false);

        built = build_nested(10); 
        xx = built(5);
        expect(6, xx == 115, true);

        expect(7, build_nested(20)(5) == 425, true);
    }
}

