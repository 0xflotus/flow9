// testing arrays, lambdas and map()

import runtime;	// for println
import ds/array; // for map
import string; // for i2s

import tools/flowc/tests/cpp/test_utils;

test1() {
	a = [1,2,3];
	b = map(a, \x -> i2s(x*x));
	s = b[0] + b[1] + b[2];
	check1(s == "149");
}

make_lambda() {
	a = 1;
	fun = \ -> a;
	fun;
}

make_lambda_direct() {
	b = 2;
	\ -> b;
}

test2() {
	fun = make_lambda();
	fun2 = make_lambda_direct();
	// println(i2s(fun()));
	check1(fun() == 1 && fun2() == 2);
}

test3() {
	// N = 5000;	// flowcpp: 2500 ms, flowc: 85 ms
	N = 15000;	// flowcpp: 19000 ms, flowc: 611 ms - 31x faster!!
	t1 = timestamp();
	v = map(enumFromTo(0, N-1), \__ -> 0);
	v2 = fold(v, v, \acc, __ -> map(acc, \xx -> xx+1));	
	t2 = timestamp();
	print_time(t1, t2);
	print_int_array(subrange(v2, 0, 10));
	check1(subrange(v2, 0, 3) == [N, N, N]);
}

// test mapi()
test4() {
	a = [10, 20, 30];
	b = mapi(a, \i, x -> i + x + 1);
	check3(b == [11, 22, 33], "test4");
}

main() {
	test1();
	test2();
	test3();
	test4();
}