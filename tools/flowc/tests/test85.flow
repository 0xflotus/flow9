native fold : (xs : [?], init : ??, fn : (??, ?)->??) -> ?? = Native.fold;

Maybe<?> ::= None, Some<?>;
	None();
	Some(value : ?);

FcExp ::= FcLambda, FcVar;
	FcLambda(body: FcExp);
	FcVar(name: string);

FcFunctionDec(
	name: string,
	lambda: Maybe<FcLambda>,
);

either(m: Maybe<?>, alternative: ?) -> ? {
	switch (m : Maybe) {
		None(): alternative;
		Some(v): v;
	}
}

countProgramVars(mo, v : FcExp) -> void {
	fold(mo, v, \acc2, fun -> {
		either(fun.lambda, v);
	});
	{}
}
