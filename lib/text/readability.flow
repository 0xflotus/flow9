import string;
import text/translation;
import math/math;
import text/unicodecharacters;

export {
	// Calculates readability according to https://en.wikipedia.org/wiki/Automated_readability_index
	getTextReadabilityIndex(text : string) -> double;
	getTextsReadabilityIndex(texts : [string]) -> double;
	getTextReadabilityGrade(index : double) -> string;
}

getTextItemsCount(text) -> Triple<int, int, int> {
	sentsCount = ref 0;
	wordsCount = ref 0;
	len = strlen(text);

	iter(enumFromTo(0, len - 1), \i -> {		
		c = getCharAt(text, i);
		if (i < len - 1) {
			nc = getCharAt(text, i + 1);
			if (isLetterUnicode(c) && !isLetterUnicode(nc)) { wordsCount := ^wordsCount + 1; }
			else if ((c == "." || c == "?" || c == "!") && (nc != "." && nc != "?" && nc != "!")) { sentsCount := ^sentsCount + 1; }
		} else {
			if (isLetterUnicode(c)) wordsCount := ^wordsCount + 1;
			sentsCount := ^sentsCount + 1;
		}
	});

	Triple(^sentsCount, ^wordsCount, len);
}

calculateReadability(items : Triple<int, int, int>) -> double {
	ss = items.first; ww = items.second; cc = items.third;
	if (ww != 0 && ss != 0) 4.71 * i2d(cc) / i2d(ww) + 0.5 * i2d(ww) / i2d(ss) - 21.43 else 0.0
}

getTextReadabilityIndex(text : string) -> double {
	calculateReadability(getTextItemsCount(text))
}

getTextsReadabilityIndex(texts : [string]) -> double {
	totalItems = fold(texts, Triple(0, 0, 0), \acc, text -> { items = getTextItemsCount(text); Triple(acc.first + items.first, acc.second + items.second, acc.third + items.third) })
	r  = calculateReadability(totalItems);
	r
}

textReadabilityGradeStrings = [
		_("Kindergarten"), _("First/Second Grade"), _("Third Grade"), _("Fourth Grade"),
		_("Fifth Grade"), _("Sixth Grade"), _("Seventh Grade"), _("Eighth Grade"),  _("Ninth Grade"),
		_("Tenth Grade"),  _("Eleventh Grade"), _("Twelfth grade"), _("College student"), _("Professor")
	];

getTextReadabilityGrade(index : double) -> string {
	textReadabilityGradeStrings[ forceRange( round(index), 0, length(textReadabilityGradeStrings) - 1 ) ]
}
