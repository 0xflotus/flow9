export {

	/*

		We use .pfx (PKCS12) keystore to provide the secure context
		under all backends (for unification reason).

		In order to generate self-signed .pfx keystore (for local testing),
		you can use keytool like:

			keytool -keyalg RSA -storetype pkcs12 -keystore mystore.pfx -genkey

		Keytool will require a password to this .pfx which you will need for
		later usage (e.g. pass it to SecureContext as pfxPassword).

		In case you already have secure context options (normally a key and
		a certificate), you can convert them to .pfx keystore using openssl like:

			openssl pkcs12 -inkey mykey.pem -in myert.cert -export -out mystore.pfx

		This should also work for establishing secure context on server
		with existing key and certificate credentials.

	*/

	SecureContext : (

		// Path to a .pfx keystore file relative to a flow running dir
		pfxPath : string,

		// Password for .pfx keystore (set with keytool)
		pfxPassword : string
	);
}
