import string;

export {

	native initDeviceInfo : io(OnDeviceInfoReady : () -> void) -> void = MediaUtils.initDeviceInfo;

	makeMediaStream(styles : [MediaUtilsStyle]) -> void;
	native stopMediaStream : io(stream : native) -> void = MediaUtils.stopMediaStream;
	
	requestAudioInputDevices(OnDevicesReady : ([MediaUtilsInputDevice]) -> void) -> void;
	requestVideoInputDevices(OnDevicesReady : ([MediaUtilsInputDevice]) -> void) -> void;

	MediaUtilsStyle ::= 
		MediaUtilsRecordAudio, MediaUtilsRecordVideo, MediaUtilsVideoDeviceId, MediaUtilsAudioDeviceId,
		//EventListeners
		MediaUtilsOnMediaStreamReady,
		MediaUtilsOnMediaStreamError;

	MediaUtilsRecordAudio(record: bool);	 
	MediaUtilsRecordVideo(record: bool);
	MediaUtilsAudioDeviceId(deviceId: string);
	MediaUtilsVideoDeviceId(deviceId: string);

	MediaUtilsOnMediaStreamReady(onMediaStreamReady : (native) -> void);
	MediaUtilsOnMediaStreamError(onError : (string) -> void);

	MediaUtilsInputDevice(deviceId : string, label : string);
}

requestAudioInputDevices(OnDevicesReady : ([MediaUtilsInputDevice]) -> void) -> void {
	deviceInfoReady = \deviceIds, labels -> {
		mapi(deviceIds, \i, deviceId -> {
			MediaUtilsInputDevice(deviceId, labels[i]);
		})
		|>	OnDevicesReady;
	};

	requestAudioInputDevicesNative(deviceInfoReady);
}

requestVideoInputDevices(OnDevicesReady : ([MediaUtilsInputDevice]) -> void) -> void {
	deviceInfoReady = \deviceIds, labels -> {
		mapi(deviceIds, \i, deviceId -> {
			MediaUtilsInputDevice(deviceId, labels[i]);
		})
		|>	OnDevicesReady;
	};

	requestVideoInputDevicesNative(deviceInfoReady);
}

makeMediaStream(styles : [MediaUtilsStyle]) -> void {
	recordAudio = extractStruct(styles, MediaUtilsRecordAudio(true)).record;
	recordVideo = extractStruct(styles, MediaUtilsRecordVideo(true)).record;

	audioDeviceId = extractStruct(styles, MediaUtilsAudioDeviceId("")).deviceId;
	videoDeviceId = extractStruct(styles, MediaUtilsVideoDeviceId("")).deviceId;

	OnMediaStreamReady = extractStruct(styles, MediaUtilsOnMediaStreamReady(nop1)).onMediaStreamReady;
	OnMediaStreamError = extractStruct(styles, MediaUtilsOnMediaStreamError(nop1)).onError;

	makeMediaStreamNative(recordAudio, recordVideo, audioDeviceId, videoDeviceId, OnMediaStreamReady, OnMediaStreamError);
}


native requestAudioInputDevicesNative : io(OnDeviceInfoReady : ([string], [string]) -> void) -> void = MediaUtils.requestAudioInputDevices;

native requestVideoInputDevicesNative : io(OnDeviceInfoReady : ([string], [string]) -> void) -> void = MediaUtils.requestVideoInputDevices;

native makeMediaStreamNative : io(recordAudio : bool, recordVideo : bool, videoDeviceId : string, audioDeviceId : string,
	OnMediaStreamReady : (native) -> void, OnMediaStreamError : (string) -> void) -> void = MediaUtils.makeMediaStream;
