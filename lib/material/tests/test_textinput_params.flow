import material/material_ui;

Pick : (subject : string, vars : [PickItem<?>], picked : DynamicBehaviour<int>);
PickItem : (label : string, value : ?);

collectPicks(picks : [Pick<[MTextInputStyle]>]) -> Material {
	styles = fconcatA(fmerge(map(picks, \pick -> fselect(pick.picked, FLift(\p -> pick.vars[p].value)))));
	MLines2(
		map(picks, \pick ->
			MDropDown(pick.picked, "Pick", map(pick.vars, \v -> v.label), [])
		)
			|> (\fs -> map(fs, \f -> MBorder(4.0, 4.0, 4.0, 4.0, f)))
			|> MLines
			|> (\f -> MBorder(4.0, 4.0, 4.0, 4.0, f)),
		MSelect(styles, \st ->
			[
				MTextInput(make(""), concat([MFilled(), MLabel("Label")], st), []),
				MTextInput(make(""), concat([MOutlined(), MLabel("Label")], st), []),
				MTextInput(make(""), concat(st, [MLabel("Label")]), [])
			]
			|> (\fs -> map(fs, \f -> MBorder(4.0, 4.0, 4.0, 4.0, f)))
			|> MLines
			|> (\f -> MBorder(4.0, 4.0, 4.0, 4.0, f))
		)
	);
}

main () {
	manager = makeMaterialManager([makeMaterialTheme(true, MGreen(500), MBlue(900))]);

	picks = [
		Pick(
			"Condensed?",
			[
				PickItem("Condensed", [MCondensed(true)]),
				PickItem("Normal", [MCondensed(false)])
			],
			make(0)
		),
		Pick(
			"Floating label?",
			[
				PickItem("Floating", [MFloatingLabel()]),
				PickItem("None", [])
			],
			make(0)
		),
		Pick(
			"Left icon?",
			[
				PickItem("Calendar", [MLeftIcon("calendar_today")]),
				PickItem("None", [])
			],
			make(0)
		),
		Pick(
			"Right icon?",
			[
				PickItem("Clear", [MShowClearIcon(true, true)]),
				PickItem("Dropdown", [MShowDropDownArrow(true)]),
				PickItem("None", [])
			],
			make(0)
		),
		Pick(
			"Multiline?",
			[
				PickItem("3 lines", [Multiline(true), MMaxLines(3)]),
				PickItem("Up to 3 lines", [Multiline(true), MMaxLines(-3)]),
				PickItem("No", [])
			],
			make(0)
		),
	];

	collectPicks(picks)
	|> (\f -> mrender(manager, true, f));
}

