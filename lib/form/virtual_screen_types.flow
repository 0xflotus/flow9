import math/geometry;
import form/form;
import fusion;

export {
	VirtualScreenInfo : (
		size : Behaviour<WidthHeight>,
		position : Behaviour<PositionScale>
	);

	CropPopupByVirtualScreenBox(
		info : VirtualScreenInfo,
		popupContent : Form,
		popupSize : Behaviour<WidthHeight>,
		translateToVisibleArea : bool
	) -> Form;
}

CropPopupByVirtualScreenBox(
	info : VirtualScreenInfo,
	popupContent : Form,
	popupSize : Behaviour<WidthHeight>,
	translateToVisibleArea : bool
) -> Form {
	screenXB = make(0.0);
	screenYB = make(0.0);
	screenWB = make(0.0);
	screenHB = make(0.0);
	windowXB = make(0.0);
	windowYB = make(0.0);
	Constructor(
		popupContent
		|> (\f -> if (translateToVisibleArea) Translate(windowXB, windowYB, f) else f)
		|> (\f -> Crop(screenXB, screenYB, screenWB, screenHB, f))
		|> (\f -> Translate(screenXB, screenYB, f)),
		make3Subscribe(info.size, info.position, popupSize, \size, p, windowWH -> {
			nextDistinct(screenXB, p.pos.x);
			nextDistinct(screenYB, p.pos.y);

			screenWidth = size.width * p.scale.x;
			screenHeight = size.height * p.scale.y;

			nextDistinct(screenWB, screenWidth);
			nextDistinct(screenHB, screenHeight);
			nextDistinct(windowXB, p.pos.x + max(0.0, (screenWidth - windowWH.width) / 2.0));
			nextDistinct(windowYB, p.pos.y + max(0.0, (screenHeight - windowWH.height) / 2.0));
		})
	);
}
