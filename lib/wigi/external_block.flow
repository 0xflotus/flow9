import form;
import maybe;
import binarytree;
import wigi/wigi2html_types;
import formats/php/php_ast;
import wigi/events;


/*
+-------------------+----------------------------------------------------------------------------------+-----+
| Element name      | Registration file name                                                           | num |
+-------------------+----------------------------------------------------------------------------------+-----+

"Interactives"
+-------------------+----------------------------------------------------------------------------------+-----+
| Dimension         | lyceum/rhapsode/content_blocks/aspects/dimension.flow                            | 1   |
+-------------------+----------------------------------------------------------------------------------+-----+
| Importance        | lyceum/rhapsode/content_blocks/aspects/importance.flow                           | 2   |
+-------------------+----------------------------------------------------------------------------------+-----+
| Tags              | lyceum/rhapsode/content_blocks/tags/tags.flow                                    | 3   |
+-------------------+----------------------------------------------------------------------------------+-----+
| Text Input        | material/mwigi/mwigi/external_blocks/text_input.flow                             | 4   |
+-------------------+----------------------------------------------------------------------------------+-----+
| Icon              | material/mwigi/mwigi/external_blocks/icon.flow                                   | 5   |
+-------------------+----------------------------------------------------------------------------------+-----+
| Check Box         | material/mwigi/mwigi/external_blocks/check_box.flow                              | 6   |
+-------------------+----------------------------------------------------------------------------------+-----+
| Drop Down         | material/mwigi/mwigi/external_blocks/drop_down.flow                              | 7   |
+-------------------+----------------------------------------------------------------------------------+-----+
| Radio Group       | material/mwigi/mwigi/external_blocks/radio_group.flow                            | 8   |
+-------------------+----------------------------------------------------------------------------------+-----+
| Slider            | material/mwigi/mwigi/external_blocks/slider.flow                                 | 9   |
+-------------------+----------------------------------------------------------------------------------+-----+
| Hyperlink         | material/mwigi/mwigi/external_blocks/hyperlink.flow                              | 10  |
+-------------------+----------------------------------------------------------------------------------+-----+
| Page break        | material/mwigi/mwigi/mw_insert_menu.flow                                         | 11  |
+-------------------+----------------------------------------------------------------------------------+-----+

"Interactives 2"
+-------------------+----------------------------------------------------------------------------------+-----+
| Date Picker       | material/mwigi/mwigi/external_blocks/date_picker.flow                            | 1   |
+-------------------+----------------------------------------------------------------------------------+-----+
| Calculated Cell   | material/mwigi/mwigi/external_blocks/calculated_cell.flow                        | 2   |
+-------------------+----------------------------------------------------------------------------------+-----+
| Color picker      | material/mwigi/mwigi/external_blocks/color_picker.flow                           | 3   |
+-------------------+----------------------------------------------------------------------------------+-----+
| Choice            | material/mwigi/mwigi/external_recursives/choice.flow                             | 4   |
+-------------------+----------------------------------------------------------------------------------+-----+
| Tabs              | material/mwigi/mwigi/external_recursives/tabs.flow                               | 5   |
+-------------------+----------------------------------------------------------------------------------+-----+
| Show or hide      | material/mwigi/mwigi/external_recursives/visible.flow                            | 6   |
+-------------------+----------------------------------------------------------------------------------+-----+
| Expander          | material/mwigi/mwigi/external_recursives/expander.flow                           | 7   |
+-------------------+----------------------------------------------------------------------------------+-----+
| Switch Control    | material/mwigi/mwigi/external_blocks/switch_control.flow                         | 8   |
+-------------------+----------------------------------------------------------------------------------+-----+

"Tables & Media"
+-------------------+----------------------------------------------------------------------------------+-----+
| Media             | material/mwigi/mwigi/external_blocks/media_block.flow                            | 1   |
+-------------------+----------------------------------------------------------------------------------+-----+
| Tables            | material/mwigi/mwigi/mw_insert_menu.flow                                         | 2   |
+-------------------+----------------------------------------------------------------------------------+-----+
| Prime Graphics    | lyceum/rhapsode/curator/prime/prime_wigi.flow                                    | 3   |
+-------------------+----------------------------------------------------------------------------------+-----+
| Diagram           | material/mwigi/mwigi/external_blocks/diagrams/register_diagram_group.flow        | 4   |
+-------------------+----------------------------------------------------------------------------------+-----+
| Math Palette      | material/mwigi/mwigi/math_palette.flow                                           | 5   |
+-------------------+----------------------------------------------------------------------------------+-----+

"Automation"
+-------------------+-------------------------------------------------------------------------------------------+-----+
| Create Case       | cog9platform/perform/wigi/external_blocks/create_case_button.flow                         | 1   |
+-------------------+-------------------------------------------------------------------------------------------+-----+
| Cases list        | cog9platform/perform/wigi/external_blocks/cases_list.flow                                 | 2   |
+-------------------+-------------------------------------------------------------------------------------------+-----+
| API Request       | material/flowschema/wigi/api_request.flow                                                 | 3   |
+-------------------+-------------------------------------------------------------------------------------------+-----+
| Selenium script   | material/robot/webrobot/seinterpreter/seinterpreter/mw_seinterpreter_external_blocks.flow | 4   |
+-------------------+-------------------------------------------------------------------------------------------+-----+
| Copy to Clipboard | cog9platform/perform/wigi/external_recursives/copy_to_clipboard.flow                      | 6   |
+-------------------+-------------------------------------------------------------------------------------------+-----+

"Advanced"
+-----------------+------------------------------------------------------------------------------------+-----+
|Rich text editor | cog9platform/perform/wigi/external_recursives/wigi_text_input.flow                 | 1   |
+-----------------+------------------------------------------------------------------------------------+-----+
| Code Editor     | cog9platform/perform/wigi/external_blocks/code_editor.flow                         | 2   |
+-----------------+------------------------------------------------------------------------------------+-----+
| Value editor    | material/flowschema/wigi/value_editor_block.flow                                   | 3   |
+-----------------+------------------------------------------------------------------------------------+-----+
| Checklist       | material/mwigi/mwigi/external_blocks/checklist.flow                                | 5   |
+-----------------+------------------------------------------------------------------------------------+-----+
| Shopping Cart   | cog9platform/perform/wigi/external_blocks/shopping_cart.flow                       | 6   |
+-----------------+------------------------------------------------------------------------------------+-----+
| Reuse snippet   | cog9platform/perform/wigi/external_blocks/wigi_snippet.flow                        | 7   |
+-----------------+------------------------------------------------------------------------------------+-----+

"Questions"
+--------------+----------------------------------------------------------------------------------+-----+
| MCQ          | lyceum/rhapsode/content_blocks/content_apis.flow                                 | 1   |
+--------------+----------------------------------------------------------------------------------+-----+
| FillBlank    | lyceum/rhapsode/content_blocks/content_apis.flow                                 | 2   |
+--------------+----------------------------------------------------------------------------------+-----+
| Rank         | lyceum/rhapsode/content_blocks/content_apis.flow                                 | 3   |
+--------------+----------------------------------------------------------------------------------+-----+
| MatchColumns | lyceum/rhapsode/content_blocks/content_apis.flow                                 | 4   |
+--------------+----------------------------------------------------------------------------------+-----+
| Categorize   | lyceum/rhapsode/content_blocks/content_apis.flow                                 | 5   |
+--------------+----------------------------------------------------------------------------------+-----+
| MathProblem  | lyceum/rhapsode/content_blocks/content_apis.flow                                 | 6   |
+--------------+----------------------------------------------------------------------------------+-----+
| Essay        | lyceum/rhapsode/content_blocks/content_apis.flow                                 | 7   |
+--------------+----------------------------------------------------------------------------------+-----+
| Web link     | lyceum/rhapsode/content_blocks/content_apis.flow                                 | 8   |
+--------------+----------------------------------------------------------------------------------+-----+
| Slide        | lyceum/rhapsode/content_blocks/content_apis.flow                                 | 9   |
+--------------+----------------------------------------------------------------------------------+-----+
| Speak        | lyceum/rhapsode/content_blocks/content_apis.flow                                 | 10  |
+--------------+----------------------------------------------------------------------------------+-----+
| Habit        | lyceum/rhapsode/content_blocks/content_apis.flow                                 | 11  |
+--------------+----------------------------------------------------------------------------------+-----+

"tables"
+-------------------+-----------------------------------------------------------------------------+-----+
| Carousel          | material/flowschema/wigi/carousel.flow                                      | 3   |
+-------------------+-----------------------------------------------------------------------------+-----+
| Upload/Download   | material/flowschema/wigi/binary_file_block.flow                             | 4   |
+-------------------+-----------------------------------------------------------------------------+-----+
| Data Report       | material/customdb/wigi/external_blocks/data_report.flow                     | 5   |
+-------------------+-----------------------------------------------------------------------------+-----+
| Data Presentation | material/customdb/wigi/external_blocks/data_presentation.flow               | 6   |
+-------------------+-----------------------------------------------------------------------------+-----+
| Data View         | material/customdb/wigi/external_blocks/data_view.flow                       | 7   |
+-------------------+-----------------------------------------------------------------------------+-----+
| PDF view          | material/distill/wigi/mw_distill_external_blocks.flow                       | 8   |
+-------------------+-----------------------------------------------------------------------------+-----+



*/

export {
	// Register API to support external block in Wigi
	registerExternalBlockAPI(exType: string, api : ExternalBlockAPI) -> void;
	registerExternalBlockGroupAPI(exType: string, api : ExternalBlockGroupAPI) -> void;

	unRegisterExternalBlockAPI(exType: string) -> void;

	/*
	This API defines how an external block should be displayed, presented and edited.
	It can also optionally support conversions to HTML, text and other formats.
	The block can store state in a tree of parameters, i.e. properties.

	When a new block is inserted, the editProperties function is called. When
	that is ready, it should call onOK with the state that is requested to be
	saved.
	*/
	ExternalBlockAPI : (
		// Return style, with description how this block should be presented in menu
		getMenu : () -> [ExternalBlockAPIMenuStyle],

		// Make a form from tree of parameters
		block2form : (
			content : Tree<string, string>,
			engine : WigiEngine,
			styles : [WigiBlockStyle]
		) -> Form,

		// Show the editor to edit block properties. This should be modal.
		editProperties : (
			// The current state of the block, i.e. the properties
			content : Tree<string, string>,
			// Call this with the final properties when changed
			onOK : (Tree<string, string>) -> void,
			engine : WigiEngine,
			document : WigiElement
		) -> void,
		// The additional functions
		style : [ExternalBlockStyle]
	);

	wigiExtBlockIsClickedAndHandling = ref false;

	ExternalBlockStyle ::= Convert2HtmlDynamicFn, Convert2HtmlStaticFn, CalculateBlockFn, Block2TextFn, VarNameFixup, Block2RecursiveFn,
			FormulaKeys, ElementSpecificFixup, ExternalWithPageEditorSupport, Block2PhpFn, ShowPropertiesDialogBeforeCreating,
			ElementSpecificClickHandler, WigiAspectConfiguration, ElementSpecificInsertEvent, ExtendContentTree, ElementPropertyToolbarEditor,
			RichTextEditorSupport, RemoveElementWhenCopy, ExtractCoachTexts, WigifyNeedAvailableHeight, CustomOnPastingContentCorrector, SelectExternalBlockOnClick,
			GetBlockVarName, GetBlockValue, Block2TextDynamicFn;
		// The function to convert the Material block value to the html string. (tree of parameters, engine, block style, htmlStyle) -> html string.
		Convert2HtmlDynamicFn(fn : (Tree<string, string>, WigiEngine, [WigiBlockStyle], [Wigi2HtmlStyle]) -> string);
		// The function to convert the block value to the html string. (tree of parameters, htmlStyle) -> html string.
		Convert2HtmlStaticFn(fn : (Tree<string, string>, [Wigi2HtmlStyle]) -> string);
		// The function to calculate the block value. (tree of parameters, engine, scope) -> tree of parameters
		CalculateBlockFn(fn : (Tree<string, string>, WigiEngine, WigiScope) -> Tree<string, string>);
		// To convert block to plain text
		Block2TextFn(fn : (Tree<string, string>) -> string);
		// Used when extracting text from wigi that can be dynamically changed.
		// fn must return string that will be surrounded by Wigi2TextDynamicValueTag in wigi2TextExtended fn
		Block2TextDynamicFn(fn : (Tree<string, string>, WigiEngine, WigiScope) -> string);
		// To mark that element should have varName field
		VarNameFixup();
		// To mark that element should have specific fixup
		ElementSpecificFixup(fn : (WigiElement) -> WigiElement);
		// To convert deprecated blocks to new recursive structure
		Block2RecursiveFn(fn : (WigiElement) -> WigiElement);
		// To list keys in state, where can be formulas, except the default "visible" and "url"
		FormulaKeys(keys : [string]);
		// Mark elements that can be shown in PageEditor
		ExternalWithPageEditorSupport();
		// The function to convert block to PHP in preview
		Block2PhpFn(fn : (Tree<string, string>) -> PhpBlock);
		ShowPropertiesDialogBeforeCreating(v : bool); // false by default for recursives, true - for blocks
		// To set specific behaviour for clicking element in editor.
		// By default it calls api.editProperties fn.
		ElementSpecificClickHandler(
			paragraphStyleUpdater : ([WigiParagraphStyle]) -> [WigiParagraphStyle],
			positionAndHandleAtOnce : bool
		);
		// Marks that this element should be removed when creating a new paragraph
		RemoveElementWhenCopy();
		// Mark elements that can be shown in Rich Text Editor
		RichTextEditorSupport();
		//Use for getting coach texts from block
		ExtractCoachTexts(fn : (Tree<string, string>) -> string);
		// Keeps info if the element has some specific parapgraph placement.
		// 0 - the most left-hand side, 1 - next at the right-hand after 0, -1 - the most right-hand side, -2 - next at the left-hand after -1.
		// [0, 1, 2 ... -3, -2, -1]
		WigiAspectConfiguration(
			name : string,
			placement : int,
			aspect : WigiBlock
		);
		dummyWigiAspectConfiguration = WigiAspectConfiguration("", 0, WigiBlock(dummyWigiExternalBlock, []));

		ElementSpecificInsertEvent(event : WigiEvent);

		// This style could be applied for some WigiElement to extend it`s initial content (2nd arg of fn - initTree)
		// with WigiElement extender, that should be convert to string (use wigi2string for this)
		// and set into initTree with existed or new key
		// fn returns new extended tree
		ExtendContentTree(fn : (extender : WigiElement, initTree : Tree<string, string>) -> Tree<string, string>);

		// Use this style if you want have an access to some properties of the block inside wigi toolbar, without opening block properties editor
		ElementPropertyToolbarEditor(fn : (content : Tree<string, string>, updateContent : (Tree<string, string>) -> void) -> Form);

		// If block uses some sort of height (Y) fillers it should use this style.
		// Wigify will divide all height (Y) available between all paragraphs that request available
		WigifyNeedAvailableHeight();
		// Allows to make some element specific changes of wigi content of external block before pasting it.
		CustomOnPastingContentCorrector(fn : (oldContent : Tree<string, string>, engine : WigiEngine) -> Tree<string, string>);
		
		SelectExternalBlockOnClick();

		// get varName and value stored for external block
		GetBlockVarName(fn : (Tree<string, string>) -> string);
		GetBlockValue(fn : (Tree<string, string>) -> WigiValue);

	externalBlockStyles(exType : string) -> [ExternalBlockStyle];

	ExternalBlockGroupAPI : (
		// Return style, with description how this block group should be presented in menu
		getMenu: () -> [ExternalBlockAPIMenuStyle],
		// Show custom dialog for a block group. initExternalBlock should be used to create new WigiExternalBlock instance
		showGroupDialog : (initExternalBlock : (string, ExternalBlockAPI) -> void) -> void,
		style: [ExternalBlockGroupStyle]
	);

	ExternalBlockGroupStyle ::= ExternalWithPageEditorSupport;

	// Resolve API by its identifier
	getExternalBlockAPI(exType: string) -> Maybe<ExternalBlockAPI>;
	getExternalBlockGroupAPI(exType: string) -> Maybe<ExternalBlockGroupAPI>;

	// Just apply passed fn to each API
	applyFn2ExternalBlocks(fn: (string, ExternalBlockAPI) -> void) -> void;
	applyFn2ExternalBlockGroups(fn : (string, ExternalBlockGroupAPI) -> void) -> void;

	foldExternalBlocks(acc : ?, fn : (key : string, value : ExternalBlockAPI, acc : ?) -> ?) -> ?;
	foldExternalBlockGroups(acc : ?, fn : (key : string, value : ExternalBlockGroupAPI, acc : ?) -> ?) -> ?;

	ExternalBlockAPIMenuStyle ::= ExternalBlockAPIMenuName, ExternalBlockAPIMenuIcon, ExternalBlockAPIMenuColumn, ExternalBlockAPIMenuColumnIndex;
		// Set string representation of block in menu. If this style is not presented, block won't be shown in menu
		ExternalBlockAPIMenuName(value : string);
		ExternalBlockAPIMenuIcon(value : string);
		ExternalBlockAPIMenuColumn(value : string);
		ExternalBlockAPIMenuColumnIndex(value : int); // automation 7,
}

externalBlocks : ref Tree<string, ExternalBlockAPI> = ref makeTree();
externalGroups : ref Tree<string, ExternalBlockGroupAPI> = ref makeTree();

externalBlockStyles(exType : string) -> [ExternalBlockStyle] {
	eitherMap(getExternalBlockAPI(exType), \api -> api.style, [])
}

registerExternalBlockAPI(exType: string, api : ExternalBlockAPI) -> void {
	externalBlocks := setTree(^externalBlocks, exType, api)
}

registerExternalBlockGroupAPI(exType: string, api : ExternalBlockGroupAPI) -> void {
	externalGroups := setTree(^externalGroups, exType, api)
}

unRegisterExternalBlockAPI(exType: string) -> void {
	externalBlocks := removeFromTree(^externalBlocks, exType)
}

getExternalBlockAPI(exType: string) -> Maybe<ExternalBlockAPI> {
	lookupTree(^externalBlocks, exType)
}

getExternalBlockGroupAPI(exType: string) -> Maybe<ExternalBlockGroupAPI> {
	lookupTree(^externalGroups, exType)
}

applyFn2ExternalBlocks(fn: (string, ExternalBlockAPI) -> void) -> void {
	traverseInOrder(^externalBlocks, fn)
}

applyFn2ExternalBlockGroups(fn : (string, ExternalBlockGroupAPI) -> void) -> void {
	traverseInOrder(^externalGroups, fn);
}

foldExternalBlocks(acc : ?, fn : (key : string, value : ExternalBlockAPI, acc : ?) -> ?) -> ? {
	foldTree(^externalBlocks, acc, fn);
}

foldExternalBlockGroups(acc : ?, fn : (key : string, value : ExternalBlockGroupAPI, acc : ?) -> ?) -> ? {
	foldTree(^externalGroups, acc, fn);
}
