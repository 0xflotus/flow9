import wigi/wigi_id;

export {
	WigiEnvironment(
		cellnames : Tree<WigiCellName, Behaviour<WigiValue>>,
		cellformulas : Tree<WigiCellName, WigiFormulaType>,
		namespaces : Tree<WigiScope, int>
	);
	makeWigiEnvironment() -> WigiEnvironment;

	// For material test recording functionalyty we need a way to change element's state while replaying the test
	// The WigiRuntime represents element in engine but name with its action.
	// For material wigi elements, the action is just the call of next(value, newValue), but it can be arbitrary action
	// only element itself know what exactly the action means
	WigiRuntime(
		cellnames : Tree<WigiCellName, (flow) -> void>
	);
	makeWigiRuntime() -> WigiRuntime;

	WigiCellName(name : string, namespace : WigiScope);
	WigiFormulaType(formula : WigiExpr, value : DynamicBehaviour<WigiValue>, nsForSearch : WigiScope);
}

makeWigiEnvironment() -> WigiEnvironment {
	WigiEnvironment(makeTree(), makeTree(), makeTree());
}

makeWigiRuntime() -> WigiRuntime {
	WigiRuntime(makeTree());
}
