import form;
import wigi/controller;

export {
	isPinyinRequired() -> bool;
	addPinyin(editor : Form, focusId : int, state : WigiEditorState) -> Form;
}

isPinyinRequired() -> bool {
	isChinese(getLang())
}

addPinyin(editor : Form, focusId : int, state : WigiEditorState) -> Form {
	pinyinStyle = extractStruct(state.wigiEditorStyle, WigiEditorPinyin([])).style;
	buttonTitle = extractStruct(pinyinStyle, WigiEditorPinyinTitle("Pi")).title;

	showB = make(false);
	alphaButtonB = make(0.);
	buttonWHB = makeWH();
	timReader = ref \ -> TextInputModel("", 0., 0., 0, Selection(0, 0), false, None());

	openFn = \ -> {
		if (!getValue(showB)) {
			releaseKeyboardFocus();
			nextDistinct(showB, true);
		}
	}

	closeFn = \makeInsert : bool -> {
		if (getValue(showB)) {
			text = ^timReader().content;
			if (makeInsert && text != "") wigiInsertText(state, text);
			releaseKeyboardFocus();
			updateKeyboardFocus(focusId);
			nextDistinct(showB, false);
		}
	}

	button = Alpha(alphaButtonB, 
		Inspect([ISize(buttonWHB)], 
			Background([Fill(white)], 
				TextButton(buttonTitle, \ -> if (getValue(showB)) closeFn(true) else openFn()))));

	keyHandler = \__, ke : KeyEvent -> {
		if (ke.keycode == 13) closeFn(true)
		else if (ke.keycode == 27) closeFn(false);

		true; 
	}

	pinyinEditor = Select(showB, \show -> 
		if (show)
			Select2(state.viewSize, buttonWHB, 
				\vs : WidthHeight, buttonWH : WidthHeight -> 
					Background([Fill(white), Stroke(lightGray)],
						Interactive([KeyDown2(keyHandler)],
							TextInput(
								[Multiline(false), AutoAlign(AutoAlignNone()), Focus(true), Content("", []), TextSize(max(vs.width/2. - buttonWH.width, 20.), buttonWH.height)], 
								[FocusOut(\ -> deferred(\ -> closeFn(true)))], 
								[StateQuery2(timReader)])),
				)
			)
		else Empty()
	);

	Constructor(
		Group([editor, Align(1., 1., Offset(-8., -8., Cols([pinyinEditor, button])))]), 
		\ -> {
			csuUns = connectSelectu(showB, alphaButtonB, \v -> if (v) 1. else 0.5);

			\-> { 
				csuUns(); 
			}
		})
}