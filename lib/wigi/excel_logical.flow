import wigi/excel_common;
import wigi/wigi_expr;
import wigi/wigi_value;


export {
	wigiAnd(l : [WigiValue]) -> WigiValue;
	wigiOr(l : [WigiValue]) -> WigiValue;
	wigiNot(l : [WigiValue]) -> WigiValue;
	wigiIf(l : [WigiValue]) -> WigiValue;
	wigiIfError(l : [WigiValue]) -> WigiValue;
}

// Additional implementation IF construct like Excel function. IF(logical_test, {value_if_true}, {value_if_false})
// Example: =IF(50<=100,"Within budget","Over budget")
wigiIf(l : [WigiValue]) -> WigiValue {
	if (length(l) != 3)
		WigiError("Wrong number of arguments. Expected 3, but got " + i2s(length(l)))
	else {
		wigiTemplateLogicalFunction([l[0]], -1, \arr : [WigiValue] -> {
			isValidArrElement = \v -> {
				valid = switch (v : WigiValue) {
					WigiBool(__) : true;
					WigiInt(__) : true;
					WigiDouble(__) : true;
					WigiString(__) : true;
					WigiRecord(__) : true;
					WigiDefaultValue() : true;
					default : false
				}
				if (valid) v else WigiError("Invalid type of arguments. [6]")
			}
			isValidArrElement(if (getWigiBool(l[0])) l[1] else l[2])
		})
	}
}

wigiNot(l : [WigiValue]) -> WigiValue {
	wigiTemplateLogicalFunction(l, 1, \arr : [WigiValue] -> {
		WigiBool(!getWigiBool(arr[0]));
	})
}

wigiAnd(l : [WigiValue]) -> WigiValue {
	if (exists(l, \v -> v == WigiBool(false))) WigiBool(false)
	else wigiTemplateLogicalFunction(l, -1, \arr : [WigiValue] -> {
		WigiBool(fold(l, true, \a, b -> a && getWigiBool(b)));
	})
}

wigiOr(l : [WigiValue]) -> WigiValue {
	if (exists(l, \v -> v == WigiBool(true))) WigiBool(true)
	else wigiTemplateLogicalFunction(l, -1, \arr : [WigiValue] -> {
		WigiBool(fold(l, false, \a, b -> a || getWigiBool(b)));
	})
}

wigiIfError(l : [WigiValue]) -> WigiValue {
	switch(l[0]) {
		WigiError(e) : l[1];
		default : l[0];
	}
}
