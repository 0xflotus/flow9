import wigi/types;

export {
	getWigiElementFontColor(element : WigiElement) -> Maybe<int>;
	appendListStyles(style : [WigiTextStyle], newFontSize : double, newColor : int) -> [WigiTextStyle];
}

getWigiElementFontColor(element : WigiElement) -> Maybe<int> {
	extractColor = \style -> fold(style, None(), \acc, s -> 
		switch (s) {
			Fill(color) : Some(color);
			default : acc
		}
	);
	findFirstColor = \elements -> findmap(elements, getWigiElementFontColor);
	switch(element) {
		WigiEmpty(): None();
		WigiStory(pars, views, style): findFirstColor(^pars);
		WigiRecursive(elements, type, style): findFirstColor(elements);
		WigiParagraph(elements, style): findFirstColor(elements);
		WigiText(text, style): extractColor(style);
		WigiDocument(root, style): getWigiElementFontColor(root);
		WigiBlock(type, style): extractColor(style);
	};
}

appendListStyles(style : [WigiTextStyle], newFontSize : double, newColor : int) -> [WigiTextStyle] {
	fold(concat([FontSize(newFontSize), Fill(newColor)], style), [], \acc2, st -> switch(st) {
		FontSize(s): if (s != 0.0 && findi(acc2, \ac -> isSameStructType(ac, st)) == None())  arrayPush(acc2, st) else acc2;
		Fill(color): if (color >= 0 && findi(acc2, \ac -> isSameStructType(ac, st)) == None())  arrayPush(acc2, st) else acc2;
		default: arrayPush(acc2, st);
	});
}