import wigi/types;
import wigi/wigi_expr2string;
import wigi/date_utils;
import wigi/wigi_date_parser;

export {
	wigiValue2Double(v : WigiValue) -> double;
	wigiValue2Int(v : WigiValue) -> int;
	wigiValue2Bool(v : WigiValue) -> bool;
	wigiValue2String(v : WigiValue) -> string;

	// Applies fn to expr and nested elements recursively
	mapWigiExpr(expr: WigiExpr, fn: (WigiExpr) -> WigiExpr) -> WigiExpr;
	foldWigiExpr(expr: WigiExpr, init : ?, fn: (?, WigiExpr) -> ?) -> ?;

	isWigiValue(expr : WigiExpr) -> bool;

	extractWigiExprsFromDatafunList(list : WigiDatafunList) -> [WigiExpr];
}

wigiValue2Double(v : WigiValue) -> double {
	switch (v : WigiValue) {
		WigiBool(b): b2d(b);
		WigiInt(i): i2d(i);
		WigiDouble(d): d;
		WigiString(s): {
			result = s2d(s);
			if (d2s(result) != s) {
				println("String to double conversion lost data: " + s);
			}
			result
		}
		WigiDate(y, m, d): i2d(wigiValue2Int(v));
		WigiTime(h, m, s): i2d(wigiValue2Int(v));
		WigiError(e): 0.0;
		WigiLambda(a, b): 0.0;
		WigiDefaultValue(): 0.0;
		WigiElementValue(e): 0.0;
		WigiArray(vs): 0.0;
		WigiBuiltInName(vr): 0.0;
		WigiRecord(fields): 0.0;
	}
}

wigiValue2Int(v : WigiValue) -> int {
	switch (v : WigiValue) {
		WigiBool(b): b2i(b);
		WigiInt(i): i;
		WigiDouble(d): floor(d);
		WigiString(s): parseDateString(s, getDateValue, \__ -> s2i(s));
		WigiDate(y, m, d): getDateValue(Date(y, m, d));
		WigiTime(h, m, s): 0;
		WigiError(e): 0;
		WigiLambda(a, b): 0;
		WigiDefaultValue(): 0;
		WigiElementValue(e): 0;
		WigiArray(vs): 0;
		WigiBuiltInName(vr): 0; 
		WigiRecord(fields): 0;
	}
}

wigiValue2Bool(v : WigiValue) -> bool {
	switch (v : WigiValue) {
		WigiBool(b): b;
		WigiInt(i): i != 0;
		WigiDouble(d): d != 0.0;
		WigiString(s): s2b(s);
		WigiDate(y, m, d): false;
		WigiTime(h, m, s): false;
		WigiError(e): false; 
		WigiLambda(a, b): false; 
		WigiDefaultValue(): false; 
		WigiElementValue(e): false; 
		WigiArray(vs): false; 
		WigiBuiltInName(vr): false; 
		WigiRecord(fields): false;
	}
}

wigiValue2String(v : WigiValue) -> string {
	switch (v) {
		WigiString(s): s;
		default: wigiExpr2string(v);
	}
}

foldWigiExpr(expr: WigiExpr, init : ?, fn: (?, WigiExpr) -> ?) -> ? {
	applyFn = \ -> fn(init, expr);
	recursiveArray : ([WigiExpr]) -> ? = \array -> fold(array, applyFn(), \acc, e -> foldWigiExpr(e, acc, fn));

	switch(expr : WigiExpr) {
		WigiLambda(args, body): recursiveArray([body]);
		WigiCall(func, args): recursiveArray(concat([func], args));
		WigiIf(condition, then, else_): recursiveArray([condition, then, else_]);
		WigiSequence(exprs): recursiveArray(exprs);
		WigiMatch(e, cases): recursiveArray(concat([e], mapConcat(cases, \case -> [case.pattern, case.body])));
		WigiMultiplicative(exprs): recursiveArray(exprs);
		WigiMult(op, e): recursiveArray([e]);
		WigiField(l, r): recursiveArray(r);
		WigiNamespace(ns, r): recursiveArray([r]);
		WigiMakeRecord(fs): recursiveArray(map(fs, secondOfPair));
		WigiMakeArray(values): recursiveArray(values);
		WigiArray(values): recursiveArray(values);
		WigiRecord(fields): recursiveArray(map(fields, secondOfPair));
		WigiRangeA1(start, end): recursiveArray([start, end]);
		WigiRangeRC(start, end): recursiveArray([start, end]);

		WigiBuiltInName(__): applyFn();
		WigiTime(__, __, __): applyFn();
		WigiBool(__): applyFn();
		WigiError(__): applyFn();
		WigiDouble(__): applyFn();
		WigiString(__): applyFn();
		WigiDate(__, __, __): applyFn();
		WigiDefaultValue(): applyFn();
		WigiInt(__): applyFn();
		WigiVarRef(__): applyFn();
		WigiCellRefA1(__): applyFn();
		WigiCellRefRC(__, __): applyFn();
		WigiElementValue(__): applyFn();
		
		WigiDatafunList(mainExpr, varsExprs) : recursiveArray(extractWigiExprsFromDatafunList(expr));
		WigiDatafunInExpr(__, __) : applyFn();
	}
}

mapWigiExpr(expr: WigiExpr, fn: (WigiExpr) -> WigiExpr) -> WigiExpr {
	recursiveCall = \e -> mapWigiExpr(e, fn);
	fn(
		switch(expr : WigiExpr) {
			WigiLambda(args, body): WigiLambda(args, body |> recursiveCall);
			WigiCall(func, args): WigiCall(func |> recursiveCall, map(args, recursiveCall));
			WigiIf(condition, then, else_): WigiIf(condition |> recursiveCall, then |> recursiveCall, else_ |> recursiveCall);
			WigiSequence(exprs): WigiSequence(map(exprs, recursiveCall));
			WigiMatch(e, cases): WigiMatch(e |> recursiveCall, map(cases, \case -> WigiMatchCase(case.pattern |> recursiveCall, case.body |> recursiveCall)));
			WigiMultiplicative(exprs): WigiMultiplicative(map(exprs, recursiveCall));
			WigiMult(op, e): WigiMult(op, e |> recursiveCall);
			WigiField(l, r): WigiField(l |> recursiveCall, map(r, recursiveCall));
			WigiNamespace(ns, r): WigiNamespace(ns, r |> recursiveCall);
			WigiMakeRecord(fs): WigiMakeRecord(map(fs, \p -> Pair(p.first, p.second |> recursiveCall)));
			WigiMakeArray(values): WigiMakeArray(map(values, recursiveCall));

			WigiArray(__): expr;
			WigiBuiltInName(__): expr;
			WigiTime(__, __, __): expr;
			WigiBool(__): expr;
			WigiError(__): expr;
			WigiDouble(__): expr;
			WigiString(__): expr;
			WigiDate(__, __, __): expr;
			WigiDefaultValue(): expr;
			WigiInt(__): expr;
			WigiVarRef(__): expr;
			WigiCellRefA1(__): expr;
			WigiCellRefRC(__, __): expr;
			WigiRangeA1(__, __): expr;
			WigiRangeRC(__, __): expr;
			WigiElementValue(__): expr;
			WigiRecord(__): expr;

			WigiDatafunList(mainExpr, varsExprs) : WigiDatafunList(
 				recursiveCall(mainExpr),
 				map(varsExprs, recursiveCall)
 			);
 			WigiDatafunInExpr(id, e) : WigiDatafunInExpr(id, recursiveCall(e));
		}
	)
}

isWigiValue(ex : WigiExpr) -> bool {
	switch (ex : WigiExpr) {
		WigiBool(__): true;
		WigiInt(__): true;
		WigiString(__): true;
		WigiDate(__, __, __): true;
		WigiTime(__, __, __): true;
		WigiBuiltInName(__): true;
		WigiDouble(__): true;
		WigiDefaultValue(): true;
		WigiError(__): true;
		WigiElementValue(__): true;
		WigiArray(__): true;
		WigiRecord(__): true;

		WigiIf(__, __, __): false;
		WigiVarRef(__): false;
		WigiCellRefA1(__): false;
		WigiCellRefRC(__, __): false;
		WigiSequence(__): false;
		WigiLambda(__, __): false;
		WigiCall(__, __): false;
		WigiMatch(__, __): false;
		WigiRangeA1(__, __): false;
		WigiRangeRC(__, __):  false;
		WigiField(__, __): false;
		WigiNamespace(__, __): false;
		WigiMultiplicative(__): false;
		WigiMult(__, __): false;
		WigiMakeArray(__): false;
		WigiMakeRecord(__): false;

		WigiDatafunList(__, __) : false;
		WigiDatafunInExpr(__, __) : false;
	}
}

extractWigiExprsFromDatafunList(list : WigiDatafunList) -> [WigiExpr] {
	concat(
		[list.mainExpr],
		list.varsExprs
	)
}
