import wigi/types;
import date;
import wigi/wigi_wiki;
import formats/json/json;

export {
	// Consider an element as a value, and find out what the value is!
	getWigiElementValue(element : WigiElement) -> WigiValue;

	date2WigiValue(d : Date) -> WigiDate;
	time2WigiValue(d : Time) -> WigiTime;
	string2WigiValue(s : string) -> WigiValue;

	getWigiBool(l : WigiValue) -> bool;
	getWigiInt(l : WigiValue) -> int;
	getWigiDouble(l : WigiValue) -> double;
	getWigiString(l : WigiValue) -> string;
	getWigiDate(l : WigiValue) -> Date;
	getWigiTime(l : WigiValue) -> Time;
	getWigiArray(l : WigiValue) -> [WigiValue];

	wigiValue2json(v : WigiValue) -> Json;
	wigiValue2jsonExt(v : WigiValue, name : string, typeMap : ref Tree<string, WigiValue>) -> Json;

	json2WigiValue(j : Json) -> WigiValue;
	json2WigiValueExt(j : Json, name : string, typeMap : Tree<string, WigiValue>) -> WigiValue;

	// the same as wigiValue2json, but you can replace the conversion function for each WigiValue type
	wigiValue2jsonFn(v : WigiValue, fns : [WigiValue2Json]) -> Json;
		WigiValue2Json ::= WigiRecord2Json;
			WigiRecord2Json(fn: (WigiRecord) -> Json);
}

date2WigiValue(d : Date) -> WigiDate {
	WigiDate(d.year, d.month, d.day)
}

time2WigiValue(t : Time) -> WigiTime {
	WigiTime(t.hour, t.min, t.sec);
}

getWigiElementValue(element : WigiElement) -> WigiValue {
	switch (element : WigiElement) {
		WigiEmpty(): WigiDefaultValue();
		WigiRecursive(elements, type, style): {
			getWigiRecursiveValue(element);
		}
		WigiStory(paragraphs, views, style): {
			// TODO:
			WigiDefaultValue();
		}
		WigiParagraph(elements, style): WigiDefaultValue();
		WigiDocument(r, s): WigiDefaultValue();
		WigiText(t, s): WigiString(t);
		WigiBlock(t, s): getWigiBlockValue(element);
	}
}


getWigiRecursiveValue(r : WigiRecursive) -> WigiValue {
	// TODO:
	println("TODO: Find the recursive value");
	WigiDefaultValue();
}

getWigiBlockValue(wb : WigiBlock) -> WigiValue {
	switch (wb.type : WigiBlockType) {
		WigiSlider(val, minVal, maxVal, stepVal, widthVal, style): WigiDouble(getValue(val));
		WigiCheckBox(val, style): WigiBool(getValue(val));
		WigiRadioButton(val, style): WigiBool(getValue(val));
		WigiInputBox(val, w, h, style): WigiString(getValue(val));
		WigiComboBox(s, v, r, w): WigiInt(getValue(s));

		WigiPicture(url, style): WigiDefaultValue();
		WigiVideo(url, style): WigiDefaultValue();
		WigiAudio(url, style): WigiDefaultValue();
		WigiPositionTag(id): WigiDefaultValue();
		WigiCustomSymbol(t, s): WigiDefaultValue();
		WigiFormdesigner(drawing, style): WigiDefaultValue();
		WigiSmartArt(content, style): WigiDefaultValue();
		WigiFormula(formula, style): WigiDefaultValue();
		WigiPageBreak(a, s): WigiDefaultValue();
		WigiCoach(text): WigiDefaultValue();
		WigiPageName(name, disableCondition): WigiDefaultValue();
		WigiNaturalMath(formula): WigiDefaultValue();
		WigiNativeWiki(w): WigiDefaultValue();
		WigiDotplot(r, s): WigiDefaultValue();
		WigiHistogram(r, s): WigiDefaultValue();
		WigiHistogramClasses(r, s): WigiDefaultValue();
		WigiBoxplot(r, s): WigiDefaultValue();
		WigiScatterplot(r, s): WigiDefaultValue();
		WigiStackedBar(r, s): WigiDefaultValue();
		WigiDatepicker(__, __): WigiDefaultValue();
		WigiCalculator(): WigiDefaultValue();
		WigiHTML(url, w, h, s): WigiDefaultValue();
		WigiReferenceDocument(t, d): WigiDefaultValue();
		WigiSetClipboardButton(title, text): WigiDefaultValue();
		WigiChoiceBlock(formula, choices): WigiDefaultValue();	// TODO: Shouldn't we get the content of our formula here?
		WigiExternalBlock(exType, content): WigiDefaultValue();
		WigiFeedback(condition, description): WigiDefaultValue();
		WigiFeedbackBlock(formula, visibilityCondition, interactiveType, choices): WigiDefaultValue();
		WigiFillBlankBlock(width, caseSensitive, exactMatch, mathFeatures, answers, otherAnswer): WigiDefaultValue();
	}
}

getWigiBool(l : WigiValue) -> bool {
	switch (l: WigiValue) {
		WigiBool(b): b;
		WigiDouble(v): v != 0.0;
		WigiInt(v): v != 0;
		WigiError(m): false;
		WigiString(s): s2b(s);
		WigiDate(y, m, d): false;
		WigiTime(h, m, s): false;
		WigiLambda(args, body): false; // TODO : calculate?
		WigiArray(vs): length(vs) > 0;
		WigiDefaultValue(): false; // Neutral
		WigiElementValue(e): getWigiBool(getWigiElementValue(e));
		WigiBuiltInName(n): s2b(n);
		WigiRecord(fs): if (length(fs) == 1) getWigiBool(fs[0].second) else false;
	}
}

getWigiInt(l : WigiValue) -> int {
	switch (l: WigiValue) {
		WigiBool(b): b2i(b);
		WigiDouble(v): floor(v);
		WigiInt(v): v;
		WigiError(m): 0;
		WigiString(s): s2i(s);
		WigiDate(y, m, d): 0;
		WigiTime(h, m, s): 0;
		WigiLambda(args, body): 0; // TODO: calculate? 
		WigiArray(vs): length(vs);
		WigiDefaultValue(): 0; // Neutral
		WigiElementValue(e): getWigiInt(getWigiElementValue(e));
		WigiBuiltInName(n): 0;
		WigiRecord(fs): if (length(fs) == 1) getWigiInt(fs[0].second) else 0;
	}
}

getWigiDouble(l : WigiValue) -> double {
	switch (l: WigiValue) {
		WigiBool(b): b2d(b);
		WigiDouble(v): v;
		WigiInt(v): i2d(v);
		WigiError(m): 0.0;
		WigiString(s): s2d(s);
		WigiDate(y, m, d): 0.0;
		WigiTime(h, m, s): 0.0;
		WigiLambda(args, body): 0.0;
		WigiArray(vs): 0.0;
		WigiDefaultValue(): 1.0; // Neutral
		WigiElementValue(e): getWigiDouble(getWigiElementValue(e));
		WigiBuiltInName(n): 0.0;
		WigiRecord(fs): 0.0;
	}
}

getWigiString(l : WigiValue) -> string {
	switch (l: WigiValue) {
		WigiBool(b): b2s(b);
		WigiDouble(v): d2s(v);
		WigiInt(v): i2s(v);
		WigiError(m): m;
		WigiString(s): s;
		WigiDate(y, m, d): "";
		WigiTime(h, m, s): "";
		WigiLambda(args, body): "";
		WigiDefaultValue(): "";
		WigiArray(exprs): "";
		WigiElementValue(e): getWigiString(getWigiElementValue(e));
		WigiBuiltInName(n): n;
		WigiRecord(fs): "";
	}
}

getWigiDate(l : WigiValue) -> Date {
	switch(l : WigiValue) {
		WigiDate(y, m, d): Date(y, m, d);
		default: nullDate
	}
}

getWigiTime(l : WigiValue) -> Time {
	switch(l : WigiValue) {
		WigiTime(h, m, s): Time(0, 0, 0, h, m, s);
		default: nullTime
	}
}

getWigiArray(l : WigiValue) -> [WigiValue] {
	switch(l : WigiValue) {
		WigiArray(vv): vv;
		default: [];
	}
}

string2WigiValue(v : string) -> WigiValue {
	s = trim(toLowerCase(v));
	if (s == "false")
		WigiBool(false)
	else if (s == "true")
		WigiBool(true)
	else if (startsWith(s, "[") && endsWith(s, "]")) {
		st = substring(s, 1, strlen(s)-2);
		WigiArray(map(strSplit(st, ","), string2WigiValue))
	} else {
		i = s2i(s);
		if (i2s(i) == s) {
			WigiInt(i)
		} else {
			d = s2d(s);
			if (d2s(d) == s) {
				WigiDouble(d)
			} else {
				WigiString(v)
			}
		}
	}
}

makeSubName(name : string, subName : string) -> string {
	name + "#" + subName;
}

json2WigiValue(j : Json) -> WigiValue {
	json2WigiValueExt(j, "", makeTree())
}

json2WigiValueExt(j : Json, name : string, typeMap : Tree<string, WigiValue>) -> WigiValue {
	switch (j) {
		JsonBool(b): WigiBool(b);
		JsonDouble(d): if (name == "") WigiDouble(d) else either(lookupTree(typeMap, name), WigiDouble(d));
		JsonString(s): {
			WigiString(s)
		}
		JsonArray(a): WigiArray(mapi(a, \i, v -> json2WigiValueExt(v, makeSubName(name, i2s(i)), typeMap)));
		JsonNull(): WigiDefaultValue();
		JsonObject(m): {
			WigiRecord(mapi(m, \i, p -> {
				Pair(toUpperCase(p.first), json2WigiValueExt(p.second, makeSubName(name, i2s(i)), typeMap))
			}));
		}
	}
}

wigiValue2json(v : WigiValue) -> Json {
	wigiValue2jsonExt(v, "", ref makeTree())
}

wigiValue2jsonExt(v : WigiValue, name : string, typeMap : ref Tree<string, WigiValue>) -> Json {
	wigiRecord2LowerCase = \value : WigiRecord -> {
		JsonObject(map(value.fields, \p -> {
			varName = toLowerCase(p.first);
			Pair(varName, wigiValue2jsonExt(p.second, makeSubName(name, varName), typeMap));
		}));
	}
	wigiValue2jsonFnExt(v, [WigiRecord2Json(wigiRecord2LowerCase)], name, typeMap);
}

wigiValue2jsonFn(v : WigiValue, fns : [WigiValue2Json]) -> Json {
	wigiValue2jsonFnExt(v, fns, "", ref makeTree())
}

wigiValue2jsonFnExt(v : WigiValue, fns : [WigiValue2Json], name : string, typeMap : ref Tree<string, WigiValue>) -> Json {
	switch (v) {
		WigiBool(b): JsonBool(b);
		WigiInt(i): {
			if (name != "") typeMap := setTree(^typeMap, name, v);
			JsonDouble(i2d(i));
		}
		WigiDouble(d): JsonDouble(d);
		WigiString(s): JsonString(s);
		WigiDate(__, __, __): JsonString(date2string(getWigiDate(v)));
		WigiArray(vs): JsonArray(mapi(vs, \i, v1 -> wigiValue2jsonExt(v1, makeSubName(name, i2s(i)), typeMap)));
		WigiRecord(fs): {
			extractStruct(fns, WigiRecord2Json(\value : WigiRecord -> {
				JsonObject(mapi(value.fields, \i, p : Pair -> Pair(p.first, wigiValue2jsonFnExt(p.second, fns, makeSubName(name, i2s(i)), typeMap))))
			})).fn(WigiRecord(fs));
		}
		WigiDefaultValue(): JsonNull();
		WigiTime(h, m, s): JsonString(i2s(h) + ":" + lpad(i2s(m), "0", 2) + ":" + lpad(i2s(s), "0", 2));
		WigiLambda(args, body): JsonNull();
		WigiBuiltInName(n): JsonNull();
		WigiError(m): JsonNull();
		WigiElementValue(e): JsonString(wigi2string(e));
	}
}