import wigi/wigi_environment_types;

export {
	WigiEngine(
		env : ref WigiEnvironment,

		// List of edges: What formulas need updating when this value changes?
		dependencies : ref Tree<WigiCellName, [WigiCellName]>,
		defaultStyles : [WigiStyles],
		externalFormTree: Tree<string, Form>,
		// To add external functions, you can assign to this reference
		externalFunctions: ref Tree<string, ([WigiValue]) -> WigiValue>,
		externalPreprocessingFunctions: ref Tree<string, (engine : WigiEngine, namespace : WigiScope, args : [Behaviour<WigiValue>], bv : DynamicBehaviour<WigiValue>) -> ()->void>,
		callbacks : ref [() -> void],
		// we have to trace already updated cells when propagating changes
		visitedCells : ref Set<WigiCellName>,
		wigiVersionsClicks : ref Tree<string, () -> void>
	);

	WigiEngineStyle ::= DeathlessVariable, RegisterToEngine, LinkToWiki, OverrideWigiVariableByNewValue, WigiEngineIsShared, EvaluatedValue;
		// If it's true, we don't call disposer, but save it to engine.callbacks instead, and call it later
		DeathlessVariable(v : bool); // false by default
		RegisterToEngine(v : bool); // true by default
		LinkToWiki(v : bool); // false by default
		OverrideWigiVariableByNewValue();
		// If we pass shared engine (shared with other editors) to the editor we don't want allow the editor to treats it as its own
		// i.e. we don't want allow it to cleanup all engines properties like environment nor dependesies
		// Not shared engine could be initialized by editor, i.e. initializeWigiEngine fn from mw_namespace will be called.
		// Many features are based on namespaces dividing to the service and the state ones.
		WigiEngineIsShared();
		// use to pass some pre-evaluated value to addFormulaToEngineExtended to omit expr evaluation
		EvaluatedValue(value : WigiValue);


	// Empty wigi engine
	dummyWigiEngine = \ -> dummyWigiEngineWithStyles([]);
	dummyWigiEngineWithStyles = \defaultStyles -> WigiEngine(ref makeWigiEnvironment(), ref makeTree(), defaultStyles, makeTree(), ref makeTree(), ref makeTree(), ref [], ref makeSet(), ref makeTree());

	makeEvaluationEngine(
		styleDictionary : Maybe<[WigiStyles]>,
		externalFormTree: Maybe<Tree<string, Form>>,
		externalFunctions: Maybe<Tree<string, ([WigiValue]) -> WigiValue>>
	) -> WigiEngine;
}

makeEvaluationEngine(styleDictionary : Maybe<[WigiStyles]>, externalFormTree: Maybe<Tree<string, Form>>, externalFunctions: Maybe<Tree<string, ([WigiValue]) -> WigiValue>>) -> WigiEngine {
	WigiEngine(ref makeWigiEnvironment(), ref makeTree(), either(styleDictionary, []), either(externalFormTree, makeTree()), ref either(externalFunctions, makeTree()), ref makeTree(), ref [], ref makeSet(), ref makeTree());
}

