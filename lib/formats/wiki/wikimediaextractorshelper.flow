export {
	SetSmartCollectMedia : ((string) ->  [string]) -> void;
	CallSmartArtCollectMedia : (string) ->  [string];

	SetWigiMediaExtractor : ((string) -> Maybe<[string]>) -> void;
	CallWigiMediaExtractor : (string) -> Maybe<[string]>;
	SetWigiMediaBlocksExtractor : ((string) -> Maybe<[WigiBlockType]>) -> void;
	CallWigiMediaBlocksExtractor : (string) -> Maybe<[WigiBlockType]>;

	SetSmart2XLIFFNodes : ((int, string) ->  [XmlNode]) -> void;
	CallSmartArt2XLIFFNodes : (int, string) ->  [XmlNode];
}

import formats/xml;
import maybe;
import wigi/types; // WigiBlockType

SmartArtCollectMediaForWiki : ref (string) ->  [string] = ref \s -> [];

SetSmartCollectMedia(parser){
	SmartArtCollectMediaForWiki := parser;
};

CallSmartArtCollectMedia(source) {
	^SmartArtCollectMediaForWiki(source)
}

wigiMediaExtractor : ref (string) -> Maybe<[string]> = ref \__ -> None();

SetWigiMediaExtractor(extractor) {
	wigiMediaExtractor := extractor
}

CallWigiMediaExtractor(wigiElement) {
	^wigiMediaExtractor(wigiElement)
}

wigiMediaBlocksExtractor : ref (string) -> Maybe<[WigiBlockType]> = ref \__ -> None();

SetWigiMediaBlocksExtractor(extractor) {
	wigiMediaBlocksExtractor := extractor
}

CallWigiMediaBlocksExtractor(wigiElement) {
	^wigiMediaBlocksExtractor(wigiElement)
}

SmartArt2XLIFFNodesForWiki : ref (int, string) -> [XmlNode] = ref \i,s -> [];

SetSmart2XLIFFNodes(parser){
	SmartArt2XLIFFNodesForWiki := parser;
};

CallSmartArt2XLIFFNodes(index, source) {
	^SmartArt2XLIFFNodesForWiki(index, source)
}