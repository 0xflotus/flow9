// Â© Copyright 2012 Area9 Innovation. All rights reserved

// This file contains global refs to support parsers that call Wiki stuff and should be called by Wiki stuff
// simultaneously
import formats/wiki/wikistyle_types;
import form;
import formats/wiki/wikilexer;
import illusion/illusion_preprocessor;
import wigi/types;
import target; //cgi

export {
	SetSmartArtParser : ((string, IuPreprocessor, [WikiStyle]) ->  [Form]) -> void;
	CallSmartArtParser : (string, IuPreprocessor, [WikiStyle]) ->  [Form];	

	SetAnsParser : ((string) ->  [Form]) -> void;
	CallAnsParser : (string) ->  [Form];

	SetDefaultLrPreview : ((string, Maybe<string>) -> [Form]) -> void;
	CallDefaultLrPreview : (string, Maybe<string>) -> [Form];

	ExpressParserMode ::= SourceIsFilename, SourceIsContent;
		SourceIsFilename();
		SourceIsContent();

	SetExpressParser : ((string, ExpressParserMode, [WikiStyle], Maybe<(Form) -> Form>) ->  Form) -> void;
	CallExpressParser : (string, ExpressParserMode, [WikiStyle]) ->  Form;
	CallExpressParser2 : (string, ExpressParserMode, [WikiStyle], (Form) -> Form) ->  Form;

	SetWigiParserS : ((string, bool, [WikiStyle]) -> [WigifiedPage]) -> void;
	CallWigiParserS : (string, [WikiStyle]) -> [WigifiedPage];
	CallWigiParserCustomS : (string, bool, [WikiStyle]) -> [WigifiedPage];
	SetWigiParserW : (parser : (WigiElement, [WigiStyles]) -> [WigifiedPage]) -> void;
	CallWigiParserW : (doc : WigiElement, defaultStyles : [WigiStyles]) -> [WigifiedPage];

	SetWikiCalc : ((() -> void) -> Form) -> void;
	CallWikiCalc : (() -> void) -> Form;

	SetWigiFillblankParser : (parser : (WigiFillBlankBlock, string, [WikiStyle]) -> Form) -> void;
	CallWigiFillblankParser : (blockType : WigiFillBlankBlock, blockName : string, wikistyles : [WikiStyle]) -> Form;
}

SmartArtParserForWiki : ref (string, IuPreprocessor, [WikiStyle]) ->  [Form] = ref \s, p, st -> [];

SetSmartArtParser(parser){
	SmartArtParserForWiki := parser;
};

CallSmartArtParser(source, preprocessor, style) {
	^SmartArtParserForWiki(source, preprocessor, style)
}

AnsWikiParser : ref (string) ->  [Form] = ref \s -> [];

SetAnsParser(parser){
	AnsWikiParser := parser;
}

CallAnsParser(source) {
	^AnsWikiParser(source)
}

DefaultLrPreview : ref (string, Maybe<string>) -> [Form] = ref \s, i -> [];

SetDefaultLrPreview(mkPreview) {
	DefaultLrPreview := mkPreview;
}

CallDefaultLrPreview(s, i) {
	^DefaultLrPreview(s, i);
}

ExpressParserForWiki : ref (string, ExpressParserMode, [WikiStyle], Maybe<(Form) -> Form>) -> Form = ref \s, m, st, ra -> {
	if (!cgi) println("ActiveArt runtime API is not initialized.");
	Empty()
}

SetExpressParser(parser){
	ExpressParserForWiki := parser;
}

CallExpressParser(source, mode, style) {
	^ExpressParserForWiki(source, mode, style, None())
}

CallExpressParser2(source, mode, style, transformDrawing) {
	^ExpressParserForWiki(source, mode, style, Some(transformDrawing))
}

WigiParserForWiki : ref (string, bool, [WikiStyle]) -> [WigifiedPage] = ref \s, editorMode, wikiContext -> {
	if (!cgi) println("WigiParserForWiki runtime API is not initialized.");
	[WigifiedPage(\ -> Empty(), [], "", "", false, false, EmptyMarginContent())];
}

SetWigiParserS(parser){
	WigiParserForWiki := parser;
}

CallWigiParserS(source, wikiContext) {
	^WigiParserForWiki(source, false, wikiContext)
}

CallWigiParserCustomS(source, editorMode, wikiContext) {
	^WigiParserForWiki(source, editorMode, wikiContext)
}

WigiParser : ref (WigiElement, [WigiStyles]) -> [WigifiedPage] = ref \w, s -> {
	if (!cgi) println("WigiParser runtime API is not initialized.");
	[WigifiedPage(\ -> Empty(), [], "", "", false, false, EmptyMarginContent())];
}

SetWigiParserW(parser : (WigiElement, [WigiStyles]) -> [WigifiedPage]) -> void {
	WigiParser := parser;
}

CallWigiParserW(doc : WigiElement, defaultStyles : [WigiStyles]) -> [WigifiedPage] {
	^WigiParser(doc, defaultStyles)
}

MakeWikiCalc : ref (() -> void) -> Form = ref \fn -> Empty();

SetWikiCalc(calc){
	MakeWikiCalc := calc;
}

CallWikiCalc(closeFn) {
	^MakeWikiCalc(closeFn)
}

WigiFillblankParser : ref (WigiFillBlankBlock, string, [WikiStyle]) -> Form = ref \bt, bn, ws -> {
	if (!cgi) println("WigiFillblankParser runtime API is not initialized.");
	Empty()
}

SetWigiFillblankParser(parser : (WigiFillBlankBlock, string, [WikiStyle]) -> Form) -> void {
	WigiFillblankParser := parser
}

CallWigiFillblankParser(blockType : WigiFillBlankBlock, blockName : string, wikistyles : [WikiStyle]) -> Form {
	^WigiFillblankParser(blockType, blockName, wikistyles)
}